/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 15119.0, "minX": 0.0, "maxY": 116221.0, "series": [{"data": [[0.0, 94220.0], [0.1, 94220.0], [0.2, 94220.0], [0.3, 94220.0], [0.4, 94527.0], [0.5, 94527.0], [0.6, 94527.0], [0.7, 94713.0], [0.8, 94713.0], [0.9, 94713.0], [1.0, 95134.0], [1.1, 95134.0], [1.2, 95134.0], [1.3, 95134.0], [1.4, 95215.0], [1.5, 95215.0], [1.6, 95215.0], [1.7, 95226.0], [1.8, 95226.0], [1.9, 95226.0], [2.0, 95226.0], [2.1, 95226.0], [2.2, 95226.0], [2.3, 95226.0], [2.4, 95262.0], [2.5, 95262.0], [2.6, 95262.0], [2.7, 95289.0], [2.8, 95289.0], [2.9, 95289.0], [3.0, 95293.0], [3.1, 95293.0], [3.2, 95293.0], [3.3, 95293.0], [3.4, 95334.0], [3.5, 95334.0], [3.6, 95334.0], [3.7, 95395.0], [3.8, 95395.0], [3.9, 95395.0], [4.0, 95420.0], [4.1, 95420.0], [4.2, 95420.0], [4.3, 95420.0], [4.4, 95469.0], [4.5, 95469.0], [4.6, 95469.0], [4.7, 95485.0], [4.8, 95485.0], [4.9, 95485.0], [5.0, 95494.0], [5.1, 95494.0], [5.2, 95494.0], [5.3, 95494.0], [5.4, 95543.0], [5.5, 95543.0], [5.6, 95543.0], [5.7, 95568.0], [5.8, 95568.0], [5.9, 95568.0], [6.0, 95701.0], [6.1, 95701.0], [6.2, 95701.0], [6.3, 95701.0], [6.4, 95835.0], [6.5, 95835.0], [6.6, 95835.0], [6.7, 95867.0], [6.8, 95867.0], [6.9, 95867.0], [7.0, 95868.0], [7.1, 95868.0], [7.2, 95868.0], [7.3, 95868.0], [7.4, 95976.0], [7.5, 95976.0], [7.6, 95976.0], [7.7, 96026.0], [7.8, 96026.0], [7.9, 96026.0], [8.0, 96043.0], [8.1, 96043.0], [8.2, 96043.0], [8.3, 96043.0], [8.4, 96104.0], [8.5, 96104.0], [8.6, 96104.0], [8.7, 96134.0], [8.8, 96134.0], [8.9, 96134.0], [9.0, 96177.0], [9.1, 96177.0], [9.2, 96177.0], [9.3, 96177.0], [9.4, 96218.0], [9.5, 96218.0], [9.6, 96218.0], [9.7, 96220.0], [9.8, 96220.0], [9.9, 96220.0], [10.0, 96249.0], [10.1, 96249.0], [10.2, 96249.0], [10.3, 96249.0], [10.4, 96391.0], [10.5, 96391.0], [10.6, 96391.0], [10.7, 96426.0], [10.8, 96426.0], [10.9, 96426.0], [11.0, 96426.0], [11.1, 96434.0], [11.2, 96434.0], [11.3, 96434.0], [11.4, 96435.0], [11.5, 96435.0], [11.6, 96435.0], [11.7, 96468.0], [11.8, 96468.0], [11.9, 96468.0], [12.0, 96468.0], [12.1, 96585.0], [12.2, 96585.0], [12.3, 96585.0], [12.4, 96657.0], [12.5, 96657.0], [12.6, 96657.0], [12.7, 96782.0], [12.8, 96782.0], [12.9, 96782.0], [13.0, 96782.0], [13.1, 96942.0], [13.2, 96942.0], [13.3, 96942.0], [13.4, 97283.0], [13.5, 97283.0], [13.6, 97283.0], [13.7, 97518.0], [13.8, 97518.0], [13.9, 97518.0], [14.0, 97518.0], [14.1, 97534.0], [14.2, 97534.0], [14.3, 97534.0], [14.4, 97562.0], [14.5, 97562.0], [14.6, 97562.0], [14.7, 98160.0], [14.8, 98160.0], [14.9, 98160.0], [15.0, 98160.0], [15.1, 98719.0], [15.2, 98719.0], [15.3, 98719.0], [15.4, 98734.0], [15.5, 98734.0], [15.6, 98734.0], [15.7, 98840.0], [15.8, 98840.0], [15.9, 98840.0], [16.0, 98840.0], [16.1, 98880.0], [16.2, 98880.0], [16.3, 98880.0], [16.4, 98926.0], [16.5, 98926.0], [16.6, 98926.0], [16.7, 98973.0], [16.8, 98973.0], [16.9, 98973.0], [17.0, 98973.0], [17.1, 98987.0], [17.2, 98987.0], [17.3, 98987.0], [17.4, 99134.0], [17.5, 99134.0], [17.6, 99134.0], [17.7, 99257.0], [17.8, 99257.0], [17.9, 99257.0], [18.0, 99257.0], [18.1, 99368.0], [18.2, 99368.0], [18.3, 99368.0], [18.4, 99493.0], [18.5, 99493.0], [18.6, 99493.0], [18.7, 99535.0], [18.8, 99535.0], [18.9, 99535.0], [19.0, 99733.0], [19.1, 99733.0], [19.2, 99733.0], [19.3, 99733.0], [19.4, 99907.0], [19.5, 99907.0], [19.6, 99907.0], [19.7, 99961.0], [19.8, 99961.0], [19.9, 99961.0], [20.0, 100201.0], [20.1, 100201.0], [20.2, 100201.0], [20.3, 100201.0], [20.4, 100523.0], [20.5, 100523.0], [20.6, 100523.0], [20.7, 100702.0], [20.8, 100702.0], [20.9, 100702.0], [21.0, 100842.0], [21.1, 100842.0], [21.2, 100842.0], [21.3, 100842.0], [21.4, 100859.0], [21.5, 100859.0], [21.6, 100859.0], [21.7, 100945.0], [21.8, 100945.0], [21.9, 100945.0], [22.0, 100961.0], [22.1, 100961.0], [22.2, 100961.0], [22.3, 100961.0], [22.4, 100989.0], [22.5, 100989.0], [22.6, 100989.0], [22.7, 100990.0], [22.8, 100990.0], [22.9, 100990.0], [23.0, 101001.0], [23.1, 101001.0], [23.2, 101001.0], [23.3, 101001.0], [23.4, 101085.0], [23.5, 101085.0], [23.6, 101085.0], [23.7, 101146.0], [23.8, 101146.0], [23.9, 101146.0], [24.0, 101158.0], [24.1, 101158.0], [24.2, 101158.0], [24.3, 101158.0], [24.4, 101201.0], [24.5, 101201.0], [24.6, 101201.0], [24.7, 101235.0], [24.8, 101235.0], [24.9, 101235.0], [25.0, 101240.0], [25.1, 101240.0], [25.2, 101240.0], [25.3, 101240.0], [25.4, 101249.0], [25.5, 101249.0], [25.6, 101249.0], [25.7, 101351.0], [25.8, 101351.0], [25.9, 101351.0], [26.0, 101360.0], [26.1, 101360.0], [26.2, 101360.0], [26.3, 101360.0], [26.4, 101426.0], [26.5, 101426.0], [26.6, 101426.0], [26.7, 101434.0], [26.8, 101434.0], [26.9, 101434.0], [27.0, 101557.0], [27.1, 101557.0], [27.2, 101557.0], [27.3, 101557.0], [27.4, 101734.0], [27.5, 101734.0], [27.6, 101734.0], [27.7, 101780.0], [27.8, 101780.0], [27.9, 101780.0], [28.0, 101901.0], [28.1, 101901.0], [28.2, 101901.0], [28.3, 101901.0], [28.4, 101909.0], [28.5, 101909.0], [28.6, 101909.0], [28.7, 101918.0], [28.8, 101918.0], [28.9, 101918.0], [29.0, 101934.0], [29.1, 101934.0], [29.2, 101934.0], [29.3, 101934.0], [29.4, 101976.0], [29.5, 101976.0], [29.6, 101976.0], [29.7, 102043.0], [29.8, 102043.0], [29.9, 102043.0], [30.0, 102076.0], [30.1, 102076.0], [30.2, 102076.0], [30.3, 102076.0], [30.4, 102162.0], [30.5, 102162.0], [30.6, 102162.0], [30.7, 102175.0], [30.8, 102175.0], [30.9, 102175.0], [31.0, 102187.0], [31.1, 102187.0], [31.2, 102187.0], [31.3, 102187.0], [31.4, 102217.0], [31.5, 102217.0], [31.6, 102217.0], [31.7, 102242.0], [31.8, 102242.0], [31.9, 102242.0], [32.0, 102260.0], [32.1, 102260.0], [32.2, 102260.0], [32.3, 102260.0], [32.4, 102260.0], [32.5, 102260.0], [32.6, 102260.0], [32.7, 102286.0], [32.8, 102286.0], [32.9, 102286.0], [33.0, 102300.0], [33.1, 102300.0], [33.2, 102300.0], [33.3, 102300.0], [33.4, 102326.0], [33.5, 102326.0], [33.6, 102326.0], [33.7, 102404.0], [33.8, 102404.0], [33.9, 102404.0], [34.0, 102463.0], [34.1, 102463.0], [34.2, 102463.0], [34.3, 102463.0], [34.4, 102477.0], [34.5, 102477.0], [34.6, 102477.0], [34.7, 102585.0], [34.8, 102585.0], [34.9, 102585.0], [35.0, 102593.0], [35.1, 102593.0], [35.2, 102593.0], [35.3, 102593.0], [35.4, 102594.0], [35.5, 102594.0], [35.6, 102594.0], [35.7, 102619.0], [35.8, 102619.0], [35.9, 102619.0], [36.0, 102643.0], [36.1, 102643.0], [36.2, 102643.0], [36.3, 102643.0], [36.4, 102660.0], [36.5, 102660.0], [36.6, 102660.0], [36.7, 102945.0], [36.8, 102945.0], [36.9, 102945.0], [37.0, 102950.0], [37.1, 102950.0], [37.2, 102950.0], [37.3, 102950.0], [37.4, 102985.0], [37.5, 102985.0], [37.6, 102985.0], [37.7, 102990.0], [37.8, 102990.0], [37.9, 102990.0], [38.0, 103094.0], [38.1, 103094.0], [38.2, 103094.0], [38.3, 103094.0], [38.4, 103122.0], [38.5, 103122.0], [38.6, 103122.0], [38.7, 103150.0], [38.8, 103150.0], [38.9, 103150.0], [39.0, 103236.0], [39.1, 103236.0], [39.2, 103236.0], [39.3, 103236.0], [39.4, 103451.0], [39.5, 103451.0], [39.6, 103451.0], [39.7, 103552.0], [39.8, 103552.0], [39.9, 103552.0], [40.0, 103552.0], [40.1, 103593.0], [40.2, 103593.0], [40.3, 103593.0], [40.4, 103649.0], [40.5, 103649.0], [40.6, 103649.0], [40.7, 103820.0], [40.8, 103820.0], [40.9, 103820.0], [41.0, 103820.0], [41.1, 103843.0], [41.2, 103843.0], [41.3, 103843.0], [41.4, 103868.0], [41.5, 103868.0], [41.6, 103868.0], [41.7, 103886.0], [41.8, 103886.0], [41.9, 103886.0], [42.0, 103886.0], [42.1, 103909.0], [42.2, 103909.0], [42.3, 103909.0], [42.4, 103999.0], [42.5, 103999.0], [42.6, 103999.0], [42.7, 104159.0], [42.8, 104159.0], [42.9, 104159.0], [43.0, 104159.0], [43.1, 104166.0], [43.2, 104166.0], [43.3, 104166.0], [43.4, 104317.0], [43.5, 104317.0], [43.6, 104317.0], [43.7, 104576.0], [43.8, 104576.0], [43.9, 104576.0], [44.0, 104576.0], [44.1, 104592.0], [44.2, 104592.0], [44.3, 104592.0], [44.4, 104642.0], [44.5, 104642.0], [44.6, 104642.0], [44.7, 104818.0], [44.8, 104818.0], [44.9, 104818.0], [45.0, 104818.0], [45.1, 105077.0], [45.2, 105077.0], [45.3, 105077.0], [45.4, 105084.0], [45.5, 105084.0], [45.6, 105084.0], [45.7, 105701.0], [45.8, 105701.0], [45.9, 105701.0], [46.0, 105701.0], [46.1, 105762.0], [46.2, 105762.0], [46.3, 105762.0], [46.4, 105934.0], [46.5, 105934.0], [46.6, 105934.0], [46.7, 106253.0], [46.8, 106253.0], [46.9, 106253.0], [47.0, 106253.0], [47.1, 106338.0], [47.2, 106338.0], [47.3, 106338.0], [47.4, 106500.0], [47.5, 106500.0], [47.6, 106500.0], [47.7, 106676.0], [47.8, 106676.0], [47.9, 106676.0], [48.0, 106676.0], [48.1, 106759.0], [48.2, 106759.0], [48.3, 106759.0], [48.4, 106770.0], [48.5, 106770.0], [48.6, 106770.0], [48.7, 106966.0], [48.8, 106966.0], [48.9, 106966.0], [49.0, 106966.0], [49.1, 106997.0], [49.2, 106997.0], [49.3, 106997.0], [49.4, 107001.0], [49.5, 107001.0], [49.6, 107001.0], [49.7, 107035.0], [49.8, 107035.0], [49.9, 107035.0], [50.0, 107035.0], [50.1, 107143.0], [50.2, 107143.0], [50.3, 107143.0], [50.4, 107208.0], [50.5, 107208.0], [50.6, 107208.0], [50.7, 107284.0], [50.8, 107284.0], [50.9, 107284.0], [51.0, 107284.0], [51.1, 107292.0], [51.2, 107292.0], [51.3, 107292.0], [51.4, 107298.0], [51.5, 107298.0], [51.6, 107298.0], [51.7, 107309.0], [51.8, 107309.0], [51.9, 107309.0], [52.0, 107309.0], [52.1, 107470.0], [52.2, 107470.0], [52.3, 107470.0], [52.4, 107611.0], [52.5, 107611.0], [52.6, 107611.0], [52.7, 107634.0], [52.8, 107634.0], [52.9, 107634.0], [53.0, 107634.0], [53.1, 107754.0], [53.2, 107754.0], [53.3, 107754.0], [53.4, 107776.0], [53.5, 107776.0], [53.6, 107776.0], [53.7, 107782.0], [53.8, 107782.0], [53.9, 107782.0], [54.0, 107782.0], [54.1, 107832.0], [54.2, 107832.0], [54.3, 107832.0], [54.4, 107875.0], [54.5, 107875.0], [54.6, 107875.0], [54.7, 107899.0], [54.8, 107899.0], [54.9, 107899.0], [55.0, 107899.0], [55.1, 107900.0], [55.2, 107900.0], [55.3, 107900.0], [55.4, 107923.0], [55.5, 107923.0], [55.6, 107923.0], [55.7, 108022.0], [55.8, 108022.0], [55.9, 108022.0], [56.0, 108022.0], [56.1, 108027.0], [56.2, 108027.0], [56.3, 108027.0], [56.4, 108043.0], [56.5, 108043.0], [56.6, 108043.0], [56.7, 108079.0], [56.8, 108079.0], [56.9, 108079.0], [57.0, 108079.0], [57.1, 108084.0], [57.2, 108084.0], [57.3, 108084.0], [57.4, 108143.0], [57.5, 108143.0], [57.6, 108143.0], [57.7, 108156.0], [57.8, 108156.0], [57.9, 108156.0], [58.0, 108156.0], [58.1, 108171.0], [58.2, 108171.0], [58.3, 108171.0], [58.4, 108265.0], [58.5, 108265.0], [58.6, 108265.0], [58.7, 108326.0], [58.8, 108326.0], [58.9, 108326.0], [59.0, 108326.0], [59.1, 108388.0], [59.2, 108388.0], [59.3, 108388.0], [59.4, 108418.0], [59.5, 108418.0], [59.6, 108418.0], [59.7, 108434.0], [59.8, 108434.0], [59.9, 108434.0], [60.0, 108434.0], [60.1, 108443.0], [60.2, 108443.0], [60.3, 108443.0], [60.4, 108467.0], [60.5, 108467.0], [60.6, 108467.0], [60.7, 108473.0], [60.8, 108473.0], [60.9, 108473.0], [61.0, 108473.0], [61.1, 108489.0], [61.2, 108489.0], [61.3, 108489.0], [61.4, 108493.0], [61.5, 108493.0], [61.6, 108493.0], [61.7, 108519.0], [61.8, 108519.0], [61.9, 108519.0], [62.0, 108519.0], [62.1, 108526.0], [62.2, 108526.0], [62.3, 108526.0], [62.4, 108553.0], [62.5, 108553.0], [62.6, 108553.0], [62.7, 108569.0], [62.8, 108569.0], [62.9, 108569.0], [63.0, 108569.0], [63.1, 108619.0], [63.2, 108619.0], [63.3, 108619.0], [63.4, 108684.0], [63.5, 108684.0], [63.6, 108684.0], [63.7, 108703.0], [63.8, 108703.0], [63.9, 108703.0], [64.0, 108703.0], [64.1, 108709.0], [64.2, 108709.0], [64.3, 108709.0], [64.4, 108951.0], [64.5, 108951.0], [64.6, 108951.0], [64.7, 108952.0], [64.8, 108952.0], [64.9, 108952.0], [65.0, 108952.0], [65.1, 108993.0], [65.2, 108993.0], [65.3, 108993.0], [65.4, 109010.0], [65.5, 109010.0], [65.6, 109010.0], [65.7, 109028.0], [65.8, 109028.0], [65.9, 109028.0], [66.0, 109028.0], [66.1, 109101.0], [66.2, 109101.0], [66.3, 109101.0], [66.4, 109150.0], [66.5, 109150.0], [66.6, 109150.0], [66.7, 109159.0], [66.8, 109159.0], [66.9, 109159.0], [67.0, 109159.0], [67.1, 109172.0], [67.2, 109172.0], [67.3, 109172.0], [67.4, 109180.0], [67.5, 109180.0], [67.6, 109180.0], [67.7, 109192.0], [67.8, 109192.0], [67.9, 109192.0], [68.0, 109192.0], [68.1, 109217.0], [68.2, 109217.0], [68.3, 109217.0], [68.4, 109230.0], [68.5, 109230.0], [68.6, 109230.0], [68.7, 109242.0], [68.8, 109242.0], [68.9, 109242.0], [69.0, 109242.0], [69.1, 109278.0], [69.2, 109278.0], [69.3, 109278.0], [69.4, 109310.0], [69.5, 109310.0], [69.6, 109310.0], [69.7, 109348.0], [69.8, 109348.0], [69.9, 109348.0], [70.0, 109348.0], [70.1, 109350.0], [70.2, 109350.0], [70.3, 109350.0], [70.4, 109382.0], [70.5, 109382.0], [70.6, 109382.0], [70.7, 109383.0], [70.8, 109383.0], [70.9, 109383.0], [71.0, 109383.0], [71.1, 109412.0], [71.2, 109412.0], [71.3, 109412.0], [71.4, 109450.0], [71.5, 109450.0], [71.6, 109450.0], [71.7, 109504.0], [71.8, 109504.0], [71.9, 109504.0], [72.0, 109504.0], [72.1, 109567.0], [72.2, 109567.0], [72.3, 109567.0], [72.4, 109574.0], [72.5, 109574.0], [72.6, 109574.0], [72.7, 109581.0], [72.8, 109581.0], [72.9, 109581.0], [73.0, 109581.0], [73.1, 109636.0], [73.2, 109636.0], [73.3, 109636.0], [73.4, 109651.0], [73.5, 109651.0], [73.6, 109651.0], [73.7, 109684.0], [73.8, 109684.0], [73.9, 109684.0], [74.0, 109684.0], [74.1, 109772.0], [74.2, 109772.0], [74.3, 109772.0], [74.4, 109790.0], [74.5, 109790.0], [74.6, 109790.0], [74.7, 109793.0], [74.8, 109793.0], [74.9, 109793.0], [75.0, 109793.0], [75.1, 109803.0], [75.2, 109803.0], [75.3, 109803.0], [75.4, 109864.0], [75.5, 109864.0], [75.6, 109864.0], [75.7, 109883.0], [75.8, 109883.0], [75.9, 109883.0], [76.0, 109908.0], [76.1, 109908.0], [76.2, 109908.0], [76.3, 109908.0], [76.4, 109945.0], [76.5, 109945.0], [76.6, 109945.0], [76.7, 109983.0], [76.8, 109983.0], [76.9, 109983.0], [77.0, 110033.0], [77.1, 110033.0], [77.2, 110033.0], [77.3, 110033.0], [77.4, 110035.0], [77.5, 110035.0], [77.6, 110035.0], [77.7, 110084.0], [77.8, 110084.0], [77.9, 110084.0], [78.0, 110133.0], [78.1, 110133.0], [78.2, 110133.0], [78.3, 110133.0], [78.4, 110143.0], [78.5, 110143.0], [78.6, 110143.0], [78.7, 110184.0], [78.8, 110184.0], [78.9, 110184.0], [79.0, 110192.0], [79.1, 110192.0], [79.2, 110192.0], [79.3, 110192.0], [79.4, 110266.0], [79.5, 110266.0], [79.6, 110266.0], [79.7, 110309.0], [79.8, 110309.0], [79.9, 110309.0], [80.0, 110759.0], [80.1, 110759.0], [80.2, 110759.0], [80.3, 110759.0], [80.4, 110841.0], [80.5, 110841.0], [80.6, 110841.0], [80.7, 111024.0], [80.8, 111024.0], [80.9, 111024.0], [81.0, 111034.0], [81.1, 111034.0], [81.2, 111034.0], [81.3, 111034.0], [81.4, 111391.0], [81.5, 111391.0], [81.6, 111391.0], [81.7, 111532.0], [81.8, 111532.0], [81.9, 111532.0], [82.0, 111715.0], [82.1, 111715.0], [82.2, 111715.0], [82.3, 111715.0], [82.4, 111768.0], [82.5, 111768.0], [82.6, 111768.0], [82.7, 111909.0], [82.8, 111909.0], [82.9, 111909.0], [83.0, 112042.0], [83.1, 112042.0], [83.2, 112042.0], [83.3, 112042.0], [83.4, 112042.0], [83.5, 112042.0], [83.6, 112042.0], [83.7, 112067.0], [83.8, 112067.0], [83.9, 112067.0], [84.0, 112126.0], [84.1, 112126.0], [84.2, 112126.0], [84.3, 112126.0], [84.4, 112204.0], [84.5, 112204.0], [84.6, 112204.0], [84.7, 112313.0], [84.8, 112313.0], [84.9, 112313.0], [85.0, 112341.0], [85.1, 112341.0], [85.2, 112341.0], [85.3, 112341.0], [85.4, 112350.0], [85.5, 112350.0], [85.6, 112350.0], [85.7, 112684.0], [85.8, 112684.0], [85.9, 112684.0], [86.0, 112685.0], [86.1, 112685.0], [86.2, 112685.0], [86.3, 112685.0], [86.4, 112700.0], [86.5, 112700.0], [86.6, 112700.0], [86.7, 112744.0], [86.8, 112744.0], [86.9, 112744.0], [87.0, 112909.0], [87.1, 112909.0], [87.2, 112909.0], [87.3, 112909.0], [87.4, 113233.0], [87.5, 113233.0], [87.6, 113233.0], [87.7, 113413.0], [87.8, 113413.0], [87.9, 113413.0], [88.0, 113908.0], [88.1, 113908.0], [88.2, 113908.0], [88.3, 113908.0], [88.4, 113941.0], [88.5, 113941.0], [88.6, 113941.0], [88.7, 113987.0], [88.8, 113987.0], [88.9, 113987.0], [89.0, 114107.0], [89.1, 114107.0], [89.2, 114107.0], [89.3, 114107.0], [89.4, 114265.0], [89.5, 114265.0], [89.6, 114265.0], [89.7, 114324.0], [89.8, 114324.0], [89.9, 114324.0], [90.0, 114391.0], [90.1, 114391.0], [90.2, 114391.0], [90.3, 114391.0], [90.4, 114433.0], [90.5, 114433.0], [90.6, 114433.0], [90.7, 114593.0], [90.8, 114593.0], [90.9, 114593.0], [91.0, 114684.0], [91.1, 114684.0], [91.2, 114684.0], [91.3, 114684.0], [91.4, 114750.0], [91.5, 114750.0], [91.6, 114750.0], [91.7, 114817.0], [91.8, 114817.0], [91.9, 114817.0], [92.0, 114836.0], [92.1, 114836.0], [92.2, 114836.0], [92.3, 114836.0], [92.4, 114863.0], [92.5, 114863.0], [92.6, 114863.0], [92.7, 114915.0], [92.8, 114915.0], [92.9, 114915.0], [93.0, 114925.0], [93.1, 114925.0], [93.2, 114925.0], [93.3, 114925.0], [93.4, 115042.0], [93.5, 115042.0], [93.6, 115042.0], [93.7, 115059.0], [93.8, 115059.0], [93.9, 115059.0], [94.0, 115059.0], [94.1, 115059.0], [94.2, 115059.0], [94.3, 115059.0], [94.4, 115090.0], [94.5, 115090.0], [94.6, 115090.0], [94.7, 115133.0], [94.8, 115133.0], [94.9, 115133.0], [95.0, 115133.0], [95.1, 115133.0], [95.2, 115133.0], [95.3, 115133.0], [95.4, 115138.0], [95.5, 115138.0], [95.6, 115138.0], [95.7, 115292.0], [95.8, 115292.0], [95.9, 115292.0], [96.0, 115338.0], [96.1, 115338.0], [96.2, 115338.0], [96.3, 115338.0], [96.4, 115452.0], [96.5, 115452.0], [96.6, 115452.0], [96.7, 115484.0], [96.8, 115484.0], [96.9, 115484.0], [97.0, 115491.0], [97.1, 115491.0], [97.2, 115491.0], [97.3, 115491.0], [97.4, 115541.0], [97.5, 115541.0], [97.6, 115541.0], [97.7, 115601.0], [97.8, 115601.0], [97.9, 115601.0], [98.0, 115750.0], [98.1, 115750.0], [98.2, 115750.0], [98.3, 115750.0], [98.4, 115776.0], [98.5, 115776.0], [98.6, 115776.0], [98.7, 115842.0], [98.8, 115842.0], [98.9, 115842.0], [99.0, 115885.0], [99.1, 115885.0], [99.2, 115885.0], [99.3, 115885.0], [99.4, 115900.0], [99.5, 115900.0], [99.6, 115900.0], [99.7, 116221.0], [99.8, 116221.0], [99.9, 116221.0]], "isOverall": false, "label": "Checkout Page", "isController": false}, {"data": [[0.0, 92336.0], [0.1, 92336.0], [0.2, 92336.0], [0.3, 92336.0], [0.4, 92972.0], [0.5, 92972.0], [0.6, 92972.0], [0.7, 93034.0], [0.8, 93034.0], [0.9, 93034.0], [1.0, 93168.0], [1.1, 93168.0], [1.2, 93168.0], [1.3, 93168.0], [1.4, 93212.0], [1.5, 93212.0], [1.6, 93212.0], [1.7, 93412.0], [1.8, 93412.0], [1.9, 93412.0], [2.0, 93602.0], [2.1, 93602.0], [2.2, 93602.0], [2.3, 93602.0], [2.4, 93823.0], [2.5, 93823.0], [2.6, 93823.0], [2.7, 93826.0], [2.8, 93826.0], [2.9, 93826.0], [3.0, 93916.0], [3.1, 93916.0], [3.2, 93916.0], [3.3, 93916.0], [3.4, 93959.0], [3.5, 93959.0], [3.6, 93959.0], [3.7, 93960.0], [3.8, 93960.0], [3.9, 93960.0], [4.0, 93971.0], [4.1, 93971.0], [4.2, 93971.0], [4.3, 93971.0], [4.4, 94045.0], [4.5, 94045.0], [4.6, 94045.0], [4.7, 94131.0], [4.8, 94131.0], [4.9, 94131.0], [5.0, 94159.0], [5.1, 94159.0], [5.2, 94159.0], [5.3, 94159.0], [5.4, 94235.0], [5.5, 94235.0], [5.6, 94235.0], [5.7, 94242.0], [5.8, 94242.0], [5.9, 94242.0], [6.0, 94296.0], [6.1, 94296.0], [6.2, 94296.0], [6.3, 94296.0], [6.4, 94427.0], [6.5, 94427.0], [6.6, 94427.0], [6.7, 94435.0], [6.8, 94435.0], [6.9, 94435.0], [7.0, 94471.0], [7.1, 94471.0], [7.2, 94471.0], [7.3, 94471.0], [7.4, 94476.0], [7.5, 94476.0], [7.6, 94476.0], [7.7, 94513.0], [7.8, 94513.0], [7.9, 94513.0], [8.0, 94543.0], [8.1, 94543.0], [8.2, 94543.0], [8.3, 94543.0], [8.4, 94550.0], [8.5, 94550.0], [8.6, 94550.0], [8.7, 94560.0], [8.8, 94560.0], [8.9, 94560.0], [9.0, 94593.0], [9.1, 94593.0], [9.2, 94593.0], [9.3, 94593.0], [9.4, 94595.0], [9.5, 94595.0], [9.6, 94595.0], [9.7, 94702.0], [9.8, 94702.0], [9.9, 94702.0], [10.0, 94810.0], [10.1, 94810.0], [10.2, 94810.0], [10.3, 94810.0], [10.4, 94813.0], [10.5, 94813.0], [10.6, 94813.0], [10.7, 94876.0], [10.8, 94876.0], [10.9, 94876.0], [11.0, 94876.0], [11.1, 94877.0], [11.2, 94877.0], [11.3, 94877.0], [11.4, 94883.0], [11.5, 94883.0], [11.6, 94883.0], [11.7, 94932.0], [11.8, 94932.0], [11.9, 94932.0], [12.0, 94932.0], [12.1, 94944.0], [12.2, 94944.0], [12.3, 94944.0], [12.4, 95019.0], [12.5, 95019.0], [12.6, 95019.0], [12.7, 95019.0], [12.8, 95019.0], [12.9, 95019.0], [13.0, 95019.0], [13.1, 95026.0], [13.2, 95026.0], [13.3, 95026.0], [13.4, 95032.0], [13.5, 95032.0], [13.6, 95032.0], [13.7, 95035.0], [13.8, 95035.0], [13.9, 95035.0], [14.0, 95035.0], [14.1, 95043.0], [14.2, 95043.0], [14.3, 95043.0], [14.4, 95064.0], [14.5, 95064.0], [14.6, 95064.0], [14.7, 95078.0], [14.8, 95078.0], [14.9, 95078.0], [15.0, 95078.0], [15.1, 95083.0], [15.2, 95083.0], [15.3, 95083.0], [15.4, 95085.0], [15.5, 95085.0], [15.6, 95085.0], [15.7, 95143.0], [15.8, 95143.0], [15.9, 95143.0], [16.0, 95143.0], [16.1, 95177.0], [16.2, 95177.0], [16.3, 95177.0], [16.4, 95194.0], [16.5, 95194.0], [16.6, 95194.0], [16.7, 95202.0], [16.8, 95202.0], [16.9, 95202.0], [17.0, 95202.0], [17.1, 95242.0], [17.2, 95242.0], [17.3, 95242.0], [17.4, 95268.0], [17.5, 95268.0], [17.6, 95268.0], [17.7, 95276.0], [17.8, 95276.0], [17.9, 95276.0], [18.0, 95316.0], [18.1, 95316.0], [18.2, 95316.0], [18.3, 95316.0], [18.4, 95385.0], [18.5, 95385.0], [18.6, 95385.0], [18.7, 95394.0], [18.8, 95394.0], [18.9, 95394.0], [19.0, 95401.0], [19.1, 95401.0], [19.2, 95401.0], [19.3, 95401.0], [19.4, 95425.0], [19.5, 95425.0], [19.6, 95425.0], [19.7, 95443.0], [19.8, 95443.0], [19.9, 95443.0], [20.0, 95509.0], [20.1, 95509.0], [20.2, 95509.0], [20.3, 95509.0], [20.4, 95577.0], [20.5, 95577.0], [20.6, 95577.0], [20.7, 95618.0], [20.8, 95618.0], [20.9, 95618.0], [21.0, 95626.0], [21.1, 95626.0], [21.2, 95626.0], [21.3, 95626.0], [21.4, 95628.0], [21.5, 95628.0], [21.6, 95628.0], [21.7, 95649.0], [21.8, 95649.0], [21.9, 95649.0], [22.0, 95677.0], [22.1, 95677.0], [22.2, 95677.0], [22.3, 95677.0], [22.4, 95684.0], [22.5, 95684.0], [22.6, 95684.0], [22.7, 95700.0], [22.8, 95700.0], [22.9, 95700.0], [23.0, 95711.0], [23.1, 95711.0], [23.2, 95711.0], [23.3, 95711.0], [23.4, 95726.0], [23.5, 95726.0], [23.6, 95726.0], [23.7, 95777.0], [23.8, 95777.0], [23.9, 95777.0], [24.0, 95860.0], [24.1, 95860.0], [24.2, 95860.0], [24.3, 95860.0], [24.4, 95877.0], [24.5, 95877.0], [24.6, 95877.0], [24.7, 95885.0], [24.8, 95885.0], [24.9, 95885.0], [25.0, 95885.0], [25.1, 95885.0], [25.2, 95885.0], [25.3, 95885.0], [25.4, 95908.0], [25.5, 95908.0], [25.6, 95908.0], [25.7, 95911.0], [25.8, 95911.0], [25.9, 95911.0], [26.0, 95915.0], [26.1, 95915.0], [26.2, 95915.0], [26.3, 95915.0], [26.4, 95951.0], [26.5, 95951.0], [26.6, 95951.0], [26.7, 96018.0], [26.8, 96018.0], [26.9, 96018.0], [27.0, 96027.0], [27.1, 96027.0], [27.2, 96027.0], [27.3, 96027.0], [27.4, 96044.0], [27.5, 96044.0], [27.6, 96044.0], [27.7, 96046.0], [27.8, 96046.0], [27.9, 96046.0], [28.0, 96060.0], [28.1, 96060.0], [28.2, 96060.0], [28.3, 96060.0], [28.4, 96076.0], [28.5, 96076.0], [28.6, 96076.0], [28.7, 96101.0], [28.8, 96101.0], [28.9, 96101.0], [29.0, 96102.0], [29.1, 96102.0], [29.2, 96102.0], [29.3, 96102.0], [29.4, 96111.0], [29.5, 96111.0], [29.6, 96111.0], [29.7, 96118.0], [29.8, 96118.0], [29.9, 96118.0], [30.0, 96134.0], [30.1, 96134.0], [30.2, 96134.0], [30.3, 96134.0], [30.4, 96160.0], [30.5, 96160.0], [30.6, 96160.0], [30.7, 96168.0], [30.8, 96168.0], [30.9, 96168.0], [31.0, 96211.0], [31.1, 96211.0], [31.2, 96211.0], [31.3, 96211.0], [31.4, 96218.0], [31.5, 96218.0], [31.6, 96218.0], [31.7, 96218.0], [31.8, 96218.0], [31.9, 96218.0], [32.0, 96220.0], [32.1, 96220.0], [32.2, 96220.0], [32.3, 96220.0], [32.4, 96224.0], [32.5, 96224.0], [32.6, 96224.0], [32.7, 96302.0], [32.8, 96302.0], [32.9, 96302.0], [33.0, 96338.0], [33.1, 96338.0], [33.2, 96338.0], [33.3, 96338.0], [33.4, 96350.0], [33.5, 96350.0], [33.6, 96350.0], [33.7, 96352.0], [33.8, 96352.0], [33.9, 96352.0], [34.0, 96369.0], [34.1, 96369.0], [34.2, 96369.0], [34.3, 96369.0], [34.4, 96372.0], [34.5, 96372.0], [34.6, 96372.0], [34.7, 96372.0], [34.8, 96372.0], [34.9, 96372.0], [35.0, 96380.0], [35.1, 96380.0], [35.2, 96380.0], [35.3, 96380.0], [35.4, 96389.0], [35.5, 96389.0], [35.6, 96389.0], [35.7, 96397.0], [35.8, 96397.0], [35.9, 96397.0], [36.0, 96400.0], [36.1, 96400.0], [36.2, 96400.0], [36.3, 96400.0], [36.4, 96402.0], [36.5, 96402.0], [36.6, 96402.0], [36.7, 96419.0], [36.8, 96419.0], [36.9, 96419.0], [37.0, 96432.0], [37.1, 96432.0], [37.2, 96432.0], [37.3, 96432.0], [37.4, 96443.0], [37.5, 96443.0], [37.6, 96443.0], [37.7, 96444.0], [37.8, 96444.0], [37.9, 96444.0], [38.0, 96467.0], [38.1, 96467.0], [38.2, 96467.0], [38.3, 96467.0], [38.4, 96468.0], [38.5, 96468.0], [38.6, 96468.0], [38.7, 96476.0], [38.8, 96476.0], [38.9, 96476.0], [39.0, 96494.0], [39.1, 96494.0], [39.2, 96494.0], [39.3, 96494.0], [39.4, 96509.0], [39.5, 96509.0], [39.6, 96509.0], [39.7, 96509.0], [39.8, 96509.0], [39.9, 96509.0], [40.0, 96509.0], [40.1, 96509.0], [40.2, 96509.0], [40.3, 96509.0], [40.4, 96510.0], [40.5, 96510.0], [40.6, 96510.0], [40.7, 96543.0], [40.8, 96543.0], [40.9, 96543.0], [41.0, 96543.0], [41.1, 96556.0], [41.2, 96556.0], [41.3, 96556.0], [41.4, 96559.0], [41.5, 96559.0], [41.6, 96559.0], [41.7, 96576.0], [41.8, 96576.0], [41.9, 96576.0], [42.0, 96576.0], [42.1, 96579.0], [42.2, 96579.0], [42.3, 96579.0], [42.4, 96583.0], [42.5, 96583.0], [42.6, 96583.0], [42.7, 96601.0], [42.8, 96601.0], [42.9, 96601.0], [43.0, 96601.0], [43.1, 96605.0], [43.2, 96605.0], [43.3, 96605.0], [43.4, 96617.0], [43.5, 96617.0], [43.6, 96617.0], [43.7, 96659.0], [43.8, 96659.0], [43.9, 96659.0], [44.0, 96659.0], [44.1, 96686.0], [44.2, 96686.0], [44.3, 96686.0], [44.4, 96751.0], [44.5, 96751.0], [44.6, 96751.0], [44.7, 96752.0], [44.8, 96752.0], [44.9, 96752.0], [45.0, 96752.0], [45.1, 96758.0], [45.2, 96758.0], [45.3, 96758.0], [45.4, 96760.0], [45.5, 96760.0], [45.6, 96760.0], [45.7, 96773.0], [45.8, 96773.0], [45.9, 96773.0], [46.0, 96773.0], [46.1, 96776.0], [46.2, 96776.0], [46.3, 96776.0], [46.4, 96784.0], [46.5, 96784.0], [46.6, 96784.0], [46.7, 96810.0], [46.8, 96810.0], [46.9, 96810.0], [47.0, 96810.0], [47.1, 96867.0], [47.2, 96867.0], [47.3, 96867.0], [47.4, 96877.0], [47.5, 96877.0], [47.6, 96877.0], [47.7, 96884.0], [47.8, 96884.0], [47.9, 96884.0], [48.0, 96884.0], [48.1, 96884.0], [48.2, 96884.0], [48.3, 96884.0], [48.4, 96885.0], [48.5, 96885.0], [48.6, 96885.0], [48.7, 96909.0], [48.8, 96909.0], [48.9, 96909.0], [49.0, 96909.0], [49.1, 96942.0], [49.2, 96942.0], [49.3, 96942.0], [49.4, 97010.0], [49.5, 97010.0], [49.6, 97010.0], [49.7, 97018.0], [49.8, 97018.0], [49.9, 97018.0], [50.0, 97018.0], [50.1, 97018.0], [50.2, 97018.0], [50.3, 97018.0], [50.4, 97036.0], [50.5, 97036.0], [50.6, 97036.0], [50.7, 97098.0], [50.8, 97098.0], [50.9, 97098.0], [51.0, 97098.0], [51.1, 97100.0], [51.2, 97100.0], [51.3, 97100.0], [51.4, 97118.0], [51.5, 97118.0], [51.6, 97118.0], [51.7, 97137.0], [51.8, 97137.0], [51.9, 97137.0], [52.0, 97137.0], [52.1, 97168.0], [52.2, 97168.0], [52.3, 97168.0], [52.4, 97183.0], [52.5, 97183.0], [52.6, 97183.0], [52.7, 97185.0], [52.8, 97185.0], [52.9, 97185.0], [53.0, 97185.0], [53.1, 97224.0], [53.2, 97224.0], [53.3, 97224.0], [53.4, 97235.0], [53.5, 97235.0], [53.6, 97235.0], [53.7, 97267.0], [53.8, 97267.0], [53.9, 97267.0], [54.0, 97267.0], [54.1, 97316.0], [54.2, 97316.0], [54.3, 97316.0], [54.4, 97337.0], [54.5, 97337.0], [54.6, 97337.0], [54.7, 97342.0], [54.8, 97342.0], [54.9, 97342.0], [55.0, 97342.0], [55.1, 97343.0], [55.2, 97343.0], [55.3, 97343.0], [55.4, 97416.0], [55.5, 97416.0], [55.6, 97416.0], [55.7, 97418.0], [55.8, 97418.0], [55.9, 97418.0], [56.0, 97418.0], [56.1, 97419.0], [56.2, 97419.0], [56.3, 97419.0], [56.4, 97443.0], [56.5, 97443.0], [56.6, 97443.0], [56.7, 97443.0], [56.8, 97443.0], [56.9, 97443.0], [57.0, 97443.0], [57.1, 97476.0], [57.2, 97476.0], [57.3, 97476.0], [57.4, 97484.0], [57.5, 97484.0], [57.6, 97484.0], [57.7, 97491.0], [57.8, 97491.0], [57.9, 97491.0], [58.0, 97491.0], [58.1, 97493.0], [58.2, 97493.0], [58.3, 97493.0], [58.4, 97507.0], [58.5, 97507.0], [58.6, 97507.0], [58.7, 97517.0], [58.8, 97517.0], [58.9, 97517.0], [59.0, 97517.0], [59.1, 97536.0], [59.2, 97536.0], [59.3, 97536.0], [59.4, 97579.0], [59.5, 97579.0], [59.6, 97579.0], [59.7, 97602.0], [59.8, 97602.0], [59.9, 97602.0], [60.0, 97602.0], [60.1, 97640.0], [60.2, 97640.0], [60.3, 97640.0], [60.4, 97651.0], [60.5, 97651.0], [60.6, 97651.0], [60.7, 97652.0], [60.8, 97652.0], [60.9, 97652.0], [61.0, 97652.0], [61.1, 97675.0], [61.2, 97675.0], [61.3, 97675.0], [61.4, 97680.0], [61.5, 97680.0], [61.6, 97680.0], [61.7, 97692.0], [61.8, 97692.0], [61.9, 97692.0], [62.0, 97692.0], [62.1, 97704.0], [62.2, 97704.0], [62.3, 97704.0], [62.4, 97710.0], [62.5, 97710.0], [62.6, 97710.0], [62.7, 97753.0], [62.8, 97753.0], [62.9, 97753.0], [63.0, 97753.0], [63.1, 97777.0], [63.2, 97777.0], [63.3, 97777.0], [63.4, 97851.0], [63.5, 97851.0], [63.6, 97851.0], [63.7, 97859.0], [63.8, 97859.0], [63.9, 97859.0], [64.0, 97859.0], [64.1, 97872.0], [64.2, 97872.0], [64.3, 97872.0], [64.4, 97901.0], [64.5, 97901.0], [64.6, 97901.0], [64.7, 97912.0], [64.8, 97912.0], [64.9, 97912.0], [65.0, 97912.0], [65.1, 97926.0], [65.2, 97926.0], [65.3, 97926.0], [65.4, 97942.0], [65.5, 97942.0], [65.6, 97942.0], [65.7, 97959.0], [65.8, 97959.0], [65.9, 97959.0], [66.0, 97959.0], [66.1, 97960.0], [66.2, 97960.0], [66.3, 97960.0], [66.4, 97985.0], [66.5, 97985.0], [66.6, 97985.0], [66.7, 98017.0], [66.8, 98017.0], [66.9, 98017.0], [67.0, 98017.0], [67.1, 98026.0], [67.2, 98026.0], [67.3, 98026.0], [67.4, 98041.0], [67.5, 98041.0], [67.6, 98041.0], [67.7, 98042.0], [67.8, 98042.0], [67.9, 98042.0], [68.0, 98042.0], [68.1, 98055.0], [68.2, 98055.0], [68.3, 98055.0], [68.4, 98069.0], [68.5, 98069.0], [68.6, 98069.0], [68.7, 98077.0], [68.8, 98077.0], [68.9, 98077.0], [69.0, 98077.0], [69.1, 98079.0], [69.2, 98079.0], [69.3, 98079.0], [69.4, 98092.0], [69.5, 98092.0], [69.6, 98092.0], [69.7, 98151.0], [69.8, 98151.0], [69.9, 98151.0], [70.0, 98151.0], [70.1, 98158.0], [70.2, 98158.0], [70.3, 98158.0], [70.4, 98160.0], [70.5, 98160.0], [70.6, 98160.0], [70.7, 98177.0], [70.8, 98177.0], [70.9, 98177.0], [71.0, 98177.0], [71.1, 98193.0], [71.2, 98193.0], [71.3, 98193.0], [71.4, 98200.0], [71.5, 98200.0], [71.6, 98200.0], [71.7, 98228.0], [71.8, 98228.0], [71.9, 98228.0], [72.0, 98228.0], [72.1, 98249.0], [72.2, 98249.0], [72.3, 98249.0], [72.4, 98323.0], [72.5, 98323.0], [72.6, 98323.0], [72.7, 98352.0], [72.8, 98352.0], [72.9, 98352.0], [73.0, 98352.0], [73.1, 98376.0], [73.2, 98376.0], [73.3, 98376.0], [73.4, 98410.0], [73.5, 98410.0], [73.6, 98410.0], [73.7, 98445.0], [73.8, 98445.0], [73.9, 98445.0], [74.0, 98479.0], [74.1, 98479.0], [74.2, 98479.0], [74.3, 98479.0], [74.4, 98485.0], [74.5, 98485.0], [74.6, 98485.0], [74.7, 98520.0], [74.8, 98520.0], [74.9, 98520.0], [75.0, 98523.0], [75.1, 98523.0], [75.2, 98523.0], [75.3, 98523.0], [75.4, 98527.0], [75.5, 98527.0], [75.6, 98527.0], [75.7, 98560.0], [75.8, 98560.0], [75.9, 98560.0], [76.0, 98581.0], [76.1, 98581.0], [76.2, 98581.0], [76.3, 98581.0], [76.4, 98585.0], [76.5, 98585.0], [76.6, 98585.0], [76.7, 98603.0], [76.8, 98603.0], [76.9, 98603.0], [77.0, 98609.0], [77.1, 98609.0], [77.2, 98609.0], [77.3, 98609.0], [77.4, 98658.0], [77.5, 98658.0], [77.6, 98658.0], [77.7, 98659.0], [77.8, 98659.0], [77.9, 98659.0], [78.0, 98660.0], [78.1, 98660.0], [78.2, 98660.0], [78.3, 98660.0], [78.4, 98728.0], [78.5, 98728.0], [78.6, 98728.0], [78.7, 98860.0], [78.8, 98860.0], [78.9, 98860.0], [79.0, 98865.0], [79.1, 98865.0], [79.2, 98865.0], [79.3, 98865.0], [79.4, 98893.0], [79.5, 98893.0], [79.6, 98893.0], [79.7, 98944.0], [79.8, 98944.0], [79.9, 98944.0], [80.0, 98951.0], [80.1, 98951.0], [80.2, 98951.0], [80.3, 98951.0], [80.4, 98959.0], [80.5, 98959.0], [80.6, 98959.0], [80.7, 98967.0], [80.8, 98967.0], [80.9, 98967.0], [81.0, 98993.0], [81.1, 98993.0], [81.2, 98993.0], [81.3, 98993.0], [81.4, 99004.0], [81.5, 99004.0], [81.6, 99004.0], [81.7, 99008.0], [81.8, 99008.0], [81.9, 99008.0], [82.0, 99009.0], [82.1, 99009.0], [82.2, 99009.0], [82.3, 99009.0], [82.4, 99049.0], [82.5, 99049.0], [82.6, 99049.0], [82.7, 99050.0], [82.8, 99050.0], [82.9, 99050.0], [83.0, 99064.0], [83.1, 99064.0], [83.2, 99064.0], [83.3, 99064.0], [83.4, 99083.0], [83.5, 99083.0], [83.6, 99083.0], [83.7, 99084.0], [83.8, 99084.0], [83.9, 99084.0], [84.0, 99095.0], [84.1, 99095.0], [84.2, 99095.0], [84.3, 99095.0], [84.4, 99152.0], [84.5, 99152.0], [84.6, 99152.0], [84.7, 99159.0], [84.8, 99159.0], [84.9, 99159.0], [85.0, 99193.0], [85.1, 99193.0], [85.2, 99193.0], [85.3, 99193.0], [85.4, 99227.0], [85.5, 99227.0], [85.6, 99227.0], [85.7, 99276.0], [85.8, 99276.0], [85.9, 99276.0], [86.0, 99326.0], [86.1, 99326.0], [86.2, 99326.0], [86.3, 99326.0], [86.4, 99333.0], [86.5, 99333.0], [86.6, 99333.0], [86.7, 99399.0], [86.8, 99399.0], [86.9, 99399.0], [87.0, 99409.0], [87.1, 99409.0], [87.2, 99409.0], [87.3, 99409.0], [87.4, 99517.0], [87.5, 99517.0], [87.6, 99517.0], [87.7, 99540.0], [87.8, 99540.0], [87.9, 99540.0], [88.0, 99801.0], [88.1, 99801.0], [88.2, 99801.0], [88.3, 99801.0], [88.4, 99831.0], [88.5, 99831.0], [88.6, 99831.0], [88.7, 99866.0], [88.8, 99866.0], [88.9, 99866.0], [89.0, 99942.0], [89.1, 99942.0], [89.2, 99942.0], [89.3, 99942.0], [89.4, 99947.0], [89.5, 99947.0], [89.6, 99947.0], [89.7, 99959.0], [89.8, 99959.0], [89.9, 99959.0], [90.0, 99991.0], [90.1, 99991.0], [90.2, 99991.0], [90.3, 99991.0], [90.4, 100000.0], [90.5, 100000.0], [90.6, 100000.0], [90.7, 100042.0], [90.8, 100042.0], [90.9, 100042.0], [91.0, 100060.0], [91.1, 100060.0], [91.2, 100060.0], [91.3, 100060.0], [91.4, 100100.0], [91.5, 100100.0], [91.6, 100100.0], [91.7, 100160.0], [91.8, 100160.0], [91.9, 100160.0], [92.0, 100260.0], [92.1, 100260.0], [92.2, 100260.0], [92.3, 100260.0], [92.4, 100276.0], [92.5, 100276.0], [92.6, 100276.0], [92.7, 100286.0], [92.8, 100286.0], [92.9, 100286.0], [93.0, 100344.0], [93.1, 100344.0], [93.2, 100344.0], [93.3, 100344.0], [93.4, 100347.0], [93.5, 100347.0], [93.6, 100347.0], [93.7, 100384.0], [93.8, 100384.0], [93.9, 100384.0], [94.0, 100463.0], [94.1, 100463.0], [94.2, 100463.0], [94.3, 100463.0], [94.4, 100548.0], [94.5, 100548.0], [94.6, 100548.0], [94.7, 100603.0], [94.8, 100603.0], [94.9, 100603.0], [95.0, 100617.0], [95.1, 100617.0], [95.2, 100617.0], [95.3, 100617.0], [95.4, 100626.0], [95.5, 100626.0], [95.6, 100626.0], [95.7, 100627.0], [95.8, 100627.0], [95.9, 100627.0], [96.0, 100649.0], [96.1, 100649.0], [96.2, 100649.0], [96.3, 100649.0], [96.4, 100676.0], [96.5, 100676.0], [96.6, 100676.0], [96.7, 100723.0], [96.8, 100723.0], [96.9, 100723.0], [97.0, 100749.0], [97.1, 100749.0], [97.2, 100749.0], [97.3, 100749.0], [97.4, 100750.0], [97.5, 100750.0], [97.6, 100750.0], [97.7, 100892.0], [97.8, 100892.0], [97.9, 100892.0], [98.0, 100917.0], [98.1, 100917.0], [98.2, 100917.0], [98.3, 100917.0], [98.4, 100926.0], [98.5, 100926.0], [98.6, 100926.0], [98.7, 100950.0], [98.8, 100950.0], [98.9, 100950.0], [99.0, 100966.0], [99.1, 100966.0], [99.2, 100966.0], [99.3, 100966.0], [99.4, 100985.0], [99.5, 100985.0], [99.6, 100985.0], [99.7, 101008.0], [99.8, 101008.0], [99.9, 101008.0]], "isOverall": false, "label": "Cart Page", "isController": false}, {"data": [[0.0, 74167.0], [0.1, 74167.0], [0.2, 74167.0], [0.3, 74167.0], [0.4, 74429.0], [0.5, 74429.0], [0.6, 74429.0], [0.7, 75152.0], [0.8, 75152.0], [0.9, 75152.0], [1.0, 75276.0], [1.1, 75276.0], [1.2, 75276.0], [1.3, 75276.0], [1.4, 75343.0], [1.5, 75343.0], [1.6, 75343.0], [1.7, 75501.0], [1.8, 75501.0], [1.9, 75501.0], [2.0, 75693.0], [2.1, 75693.0], [2.2, 75693.0], [2.3, 75693.0], [2.4, 75756.0], [2.5, 75756.0], [2.6, 75756.0], [2.7, 75986.0], [2.8, 75986.0], [2.9, 75986.0], [3.0, 76253.0], [3.1, 76253.0], [3.2, 76253.0], [3.3, 76253.0], [3.4, 76275.0], [3.5, 76275.0], [3.6, 76275.0], [3.7, 76324.0], [3.8, 76324.0], [3.9, 76324.0], [4.0, 76528.0], [4.1, 76528.0], [4.2, 76528.0], [4.3, 76528.0], [4.4, 76590.0], [4.5, 76590.0], [4.6, 76590.0], [4.7, 76734.0], [4.8, 76734.0], [4.9, 76734.0], [5.0, 76847.0], [5.1, 76847.0], [5.2, 76847.0], [5.3, 76847.0], [5.4, 76952.0], [5.5, 76952.0], [5.6, 76952.0], [5.7, 77202.0], [5.8, 77202.0], [5.9, 77202.0], [6.0, 77210.0], [6.1, 77210.0], [6.2, 77210.0], [6.3, 77210.0], [6.4, 77413.0], [6.5, 77413.0], [6.6, 77413.0], [6.7, 77425.0], [6.8, 77425.0], [6.9, 77425.0], [7.0, 77496.0], [7.1, 77496.0], [7.2, 77496.0], [7.3, 77496.0], [7.4, 78471.0], [7.5, 78471.0], [7.6, 78471.0], [7.7, 78501.0], [7.8, 78501.0], [7.9, 78501.0], [8.0, 78536.0], [8.1, 78536.0], [8.2, 78536.0], [8.3, 78536.0], [8.4, 78714.0], [8.5, 78714.0], [8.6, 78714.0], [8.7, 78726.0], [8.8, 78726.0], [8.9, 78726.0], [9.0, 78745.0], [9.1, 78745.0], [9.2, 78745.0], [9.3, 78745.0], [9.4, 78808.0], [9.5, 78808.0], [9.6, 78808.0], [9.7, 78836.0], [9.8, 78836.0], [9.9, 78836.0], [10.0, 78993.0], [10.1, 78993.0], [10.2, 78993.0], [10.3, 78993.0], [10.4, 79042.0], [10.5, 79042.0], [10.6, 79042.0], [10.7, 79053.0], [10.8, 79053.0], [10.9, 79053.0], [11.0, 79053.0], [11.1, 79359.0], [11.2, 79359.0], [11.3, 79359.0], [11.4, 79378.0], [11.5, 79378.0], [11.6, 79378.0], [11.7, 79459.0], [11.8, 79459.0], [11.9, 79459.0], [12.0, 79459.0], [12.1, 79461.0], [12.2, 79461.0], [12.3, 79461.0], [12.4, 79463.0], [12.5, 79463.0], [12.6, 79463.0], [12.7, 79487.0], [12.8, 79487.0], [12.9, 79487.0], [13.0, 79487.0], [13.1, 79711.0], [13.2, 79711.0], [13.3, 79711.0], [13.4, 79784.0], [13.5, 79784.0], [13.6, 79784.0], [13.7, 79868.0], [13.8, 79868.0], [13.9, 79868.0], [14.0, 79868.0], [14.1, 79984.0], [14.2, 79984.0], [14.3, 79984.0], [14.4, 80100.0], [14.5, 80100.0], [14.6, 80100.0], [14.7, 80135.0], [14.8, 80135.0], [14.9, 80135.0], [15.0, 80135.0], [15.1, 80194.0], [15.2, 80194.0], [15.3, 80194.0], [15.4, 80283.0], [15.5, 80283.0], [15.6, 80283.0], [15.7, 80357.0], [15.8, 80357.0], [15.9, 80357.0], [16.0, 80357.0], [16.1, 80391.0], [16.2, 80391.0], [16.3, 80391.0], [16.4, 80443.0], [16.5, 80443.0], [16.6, 80443.0], [16.7, 80497.0], [16.8, 80497.0], [16.9, 80497.0], [17.0, 80497.0], [17.1, 80626.0], [17.2, 80626.0], [17.3, 80626.0], [17.4, 80777.0], [17.5, 80777.0], [17.6, 80777.0], [17.7, 80819.0], [17.8, 80819.0], [17.9, 80819.0], [18.0, 80819.0], [18.1, 80836.0], [18.2, 80836.0], [18.3, 80836.0], [18.4, 80867.0], [18.5, 80867.0], [18.6, 80867.0], [18.7, 80876.0], [18.8, 80876.0], [18.9, 80876.0], [19.0, 80888.0], [19.1, 80888.0], [19.2, 80888.0], [19.3, 80888.0], [19.4, 80902.0], [19.5, 80902.0], [19.6, 80902.0], [19.7, 80903.0], [19.8, 80903.0], [19.9, 80903.0], [20.0, 80970.0], [20.1, 80970.0], [20.2, 80970.0], [20.3, 80970.0], [20.4, 80993.0], [20.5, 80993.0], [20.6, 80993.0], [20.7, 81027.0], [20.8, 81027.0], [20.9, 81027.0], [21.0, 81041.0], [21.1, 81041.0], [21.2, 81041.0], [21.3, 81041.0], [21.4, 81047.0], [21.5, 81047.0], [21.6, 81047.0], [21.7, 81051.0], [21.8, 81051.0], [21.9, 81051.0], [22.0, 81071.0], [22.1, 81071.0], [22.2, 81071.0], [22.3, 81071.0], [22.4, 81179.0], [22.5, 81179.0], [22.6, 81179.0], [22.7, 81180.0], [22.8, 81180.0], [22.9, 81180.0], [23.0, 81202.0], [23.1, 81202.0], [23.2, 81202.0], [23.3, 81202.0], [23.4, 81251.0], [23.5, 81251.0], [23.6, 81251.0], [23.7, 81303.0], [23.8, 81303.0], [23.9, 81303.0], [24.0, 81313.0], [24.1, 81313.0], [24.2, 81313.0], [24.3, 81313.0], [24.4, 81401.0], [24.5, 81401.0], [24.6, 81401.0], [24.7, 81443.0], [24.8, 81443.0], [24.9, 81443.0], [25.0, 81502.0], [25.1, 81502.0], [25.2, 81502.0], [25.3, 81502.0], [25.4, 81528.0], [25.5, 81528.0], [25.6, 81528.0], [25.7, 81585.0], [25.8, 81585.0], [25.9, 81585.0], [26.0, 81611.0], [26.1, 81611.0], [26.2, 81611.0], [26.3, 81611.0], [26.4, 81659.0], [26.5, 81659.0], [26.6, 81659.0], [26.7, 81693.0], [26.8, 81693.0], [26.9, 81693.0], [27.0, 81694.0], [27.1, 81694.0], [27.2, 81694.0], [27.3, 81694.0], [27.4, 81760.0], [27.5, 81760.0], [27.6, 81760.0], [27.7, 81777.0], [27.8, 81777.0], [27.9, 81777.0], [28.0, 81793.0], [28.1, 81793.0], [28.2, 81793.0], [28.3, 81793.0], [28.4, 81811.0], [28.5, 81811.0], [28.6, 81811.0], [28.7, 81843.0], [28.8, 81843.0], [28.9, 81843.0], [29.0, 81854.0], [29.1, 81854.0], [29.2, 81854.0], [29.3, 81854.0], [29.4, 81869.0], [29.5, 81869.0], [29.6, 81869.0], [29.7, 81893.0], [29.8, 81893.0], [29.9, 81893.0], [30.0, 81952.0], [30.1, 81952.0], [30.2, 81952.0], [30.3, 81952.0], [30.4, 82085.0], [30.5, 82085.0], [30.6, 82085.0], [30.7, 82102.0], [30.8, 82102.0], [30.9, 82102.0], [31.0, 82102.0], [31.1, 82102.0], [31.2, 82102.0], [31.3, 82102.0], [31.4, 82104.0], [31.5, 82104.0], [31.6, 82104.0], [31.7, 82128.0], [31.8, 82128.0], [31.9, 82128.0], [32.0, 82221.0], [32.1, 82221.0], [32.2, 82221.0], [32.3, 82221.0], [32.4, 82253.0], [32.5, 82253.0], [32.6, 82253.0], [32.7, 82259.0], [32.8, 82259.0], [32.9, 82259.0], [33.0, 82309.0], [33.1, 82309.0], [33.2, 82309.0], [33.3, 82309.0], [33.4, 82320.0], [33.5, 82320.0], [33.6, 82320.0], [33.7, 82353.0], [33.8, 82353.0], [33.9, 82353.0], [34.0, 82368.0], [34.1, 82368.0], [34.2, 82368.0], [34.3, 82368.0], [34.4, 82485.0], [34.5, 82485.0], [34.6, 82485.0], [34.7, 82485.0], [34.8, 82485.0], [34.9, 82485.0], [35.0, 82527.0], [35.1, 82527.0], [35.2, 82527.0], [35.3, 82527.0], [35.4, 82543.0], [35.5, 82543.0], [35.6, 82543.0], [35.7, 82559.0], [35.8, 82559.0], [35.9, 82559.0], [36.0, 82561.0], [36.1, 82561.0], [36.2, 82561.0], [36.3, 82561.0], [36.4, 82577.0], [36.5, 82577.0], [36.6, 82577.0], [36.7, 82614.0], [36.8, 82614.0], [36.9, 82614.0], [37.0, 82632.0], [37.1, 82632.0], [37.2, 82632.0], [37.3, 82632.0], [37.4, 82632.0], [37.5, 82632.0], [37.6, 82632.0], [37.7, 82665.0], [37.8, 82665.0], [37.9, 82665.0], [38.0, 82711.0], [38.1, 82711.0], [38.2, 82711.0], [38.3, 82711.0], [38.4, 82751.0], [38.5, 82751.0], [38.6, 82751.0], [38.7, 82753.0], [38.8, 82753.0], [38.9, 82753.0], [39.0, 82785.0], [39.1, 82785.0], [39.2, 82785.0], [39.3, 82785.0], [39.4, 82844.0], [39.5, 82844.0], [39.6, 82844.0], [39.7, 82863.0], [39.8, 82863.0], [39.9, 82863.0], [40.0, 82902.0], [40.1, 82902.0], [40.2, 82902.0], [40.3, 82902.0], [40.4, 82918.0], [40.5, 82918.0], [40.6, 82918.0], [40.7, 82939.0], [40.8, 82939.0], [40.9, 82939.0], [41.0, 82939.0], [41.1, 82969.0], [41.2, 82969.0], [41.3, 82969.0], [41.4, 83002.0], [41.5, 83002.0], [41.6, 83002.0], [41.7, 83035.0], [41.8, 83035.0], [41.9, 83035.0], [42.0, 83035.0], [42.1, 83052.0], [42.2, 83052.0], [42.3, 83052.0], [42.4, 83053.0], [42.5, 83053.0], [42.6, 83053.0], [42.7, 83108.0], [42.8, 83108.0], [42.9, 83108.0], [43.0, 83108.0], [43.1, 83151.0], [43.2, 83151.0], [43.3, 83151.0], [43.4, 83278.0], [43.5, 83278.0], [43.6, 83278.0], [43.7, 83298.0], [43.8, 83298.0], [43.9, 83298.0], [44.0, 83298.0], [44.1, 83299.0], [44.2, 83299.0], [44.3, 83299.0], [44.4, 83348.0], [44.5, 83348.0], [44.6, 83348.0], [44.7, 83351.0], [44.8, 83351.0], [44.9, 83351.0], [45.0, 83351.0], [45.1, 83369.0], [45.2, 83369.0], [45.3, 83369.0], [45.4, 83431.0], [45.5, 83431.0], [45.6, 83431.0], [45.7, 83443.0], [45.8, 83443.0], [45.9, 83443.0], [46.0, 83443.0], [46.1, 83486.0], [46.2, 83486.0], [46.3, 83486.0], [46.4, 83487.0], [46.5, 83487.0], [46.6, 83487.0], [46.7, 83525.0], [46.8, 83525.0], [46.9, 83525.0], [47.0, 83525.0], [47.1, 83535.0], [47.2, 83535.0], [47.3, 83535.0], [47.4, 83544.0], [47.5, 83544.0], [47.6, 83544.0], [47.7, 83577.0], [47.8, 83577.0], [47.9, 83577.0], [48.0, 83577.0], [48.1, 83586.0], [48.2, 83586.0], [48.3, 83586.0], [48.4, 83616.0], [48.5, 83616.0], [48.6, 83616.0], [48.7, 83666.0], [48.8, 83666.0], [48.9, 83666.0], [49.0, 83666.0], [49.1, 83669.0], [49.2, 83669.0], [49.3, 83669.0], [49.4, 83706.0], [49.5, 83706.0], [49.6, 83706.0], [49.7, 83760.0], [49.8, 83760.0], [49.9, 83760.0], [50.0, 83760.0], [50.1, 83777.0], [50.2, 83777.0], [50.3, 83777.0], [50.4, 83831.0], [50.5, 83831.0], [50.6, 83831.0], [50.7, 83845.0], [50.8, 83845.0], [50.9, 83845.0], [51.0, 83845.0], [51.1, 83907.0], [51.2, 83907.0], [51.3, 83907.0], [51.4, 83961.0], [51.5, 83961.0], [51.6, 83961.0], [51.7, 83978.0], [51.8, 83978.0], [51.9, 83978.0], [52.0, 83978.0], [52.1, 83996.0], [52.2, 83996.0], [52.3, 83996.0], [52.4, 84052.0], [52.5, 84052.0], [52.6, 84052.0], [52.7, 84069.0], [52.8, 84069.0], [52.9, 84069.0], [53.0, 84069.0], [53.1, 84111.0], [53.2, 84111.0], [53.3, 84111.0], [53.4, 84118.0], [53.5, 84118.0], [53.6, 84118.0], [53.7, 84191.0], [53.8, 84191.0], [53.9, 84191.0], [54.0, 84191.0], [54.1, 84276.0], [54.2, 84276.0], [54.3, 84276.0], [54.4, 84335.0], [54.5, 84335.0], [54.6, 84335.0], [54.7, 84377.0], [54.8, 84377.0], [54.9, 84377.0], [55.0, 84377.0], [55.1, 84377.0], [55.2, 84377.0], [55.3, 84377.0], [55.4, 84430.0], [55.5, 84430.0], [55.6, 84430.0], [55.7, 84435.0], [55.8, 84435.0], [55.9, 84435.0], [56.0, 84435.0], [56.1, 84440.0], [56.2, 84440.0], [56.3, 84440.0], [56.4, 84449.0], [56.5, 84449.0], [56.6, 84449.0], [56.7, 84562.0], [56.8, 84562.0], [56.9, 84562.0], [57.0, 84562.0], [57.1, 84585.0], [57.2, 84585.0], [57.3, 84585.0], [57.4, 84604.0], [57.5, 84604.0], [57.6, 84604.0], [57.7, 84627.0], [57.8, 84627.0], [57.9, 84627.0], [58.0, 84627.0], [58.1, 84646.0], [58.2, 84646.0], [58.3, 84646.0], [58.4, 84646.0], [58.5, 84646.0], [58.6, 84646.0], [58.7, 84653.0], [58.8, 84653.0], [58.9, 84653.0], [59.0, 84653.0], [59.1, 84737.0], [59.2, 84737.0], [59.3, 84737.0], [59.4, 84744.0], [59.5, 84744.0], [59.6, 84744.0], [59.7, 84776.0], [59.8, 84776.0], [59.9, 84776.0], [60.0, 84776.0], [60.1, 84787.0], [60.2, 84787.0], [60.3, 84787.0], [60.4, 84834.0], [60.5, 84834.0], [60.6, 84834.0], [60.7, 84836.0], [60.8, 84836.0], [60.9, 84836.0], [61.0, 84836.0], [61.1, 84845.0], [61.2, 84845.0], [61.3, 84845.0], [61.4, 84910.0], [61.5, 84910.0], [61.6, 84910.0], [61.7, 84952.0], [61.8, 84952.0], [61.9, 84952.0], [62.0, 84952.0], [62.1, 84953.0], [62.2, 84953.0], [62.3, 84953.0], [62.4, 85087.0], [62.5, 85087.0], [62.6, 85087.0], [62.7, 85174.0], [62.8, 85174.0], [62.9, 85174.0], [63.0, 85174.0], [63.1, 85178.0], [63.2, 85178.0], [63.3, 85178.0], [63.4, 85179.0], [63.5, 85179.0], [63.6, 85179.0], [63.7, 85199.0], [63.8, 85199.0], [63.9, 85199.0], [64.0, 85199.0], [64.1, 85224.0], [64.2, 85224.0], [64.3, 85224.0], [64.4, 85240.0], [64.5, 85240.0], [64.6, 85240.0], [64.7, 85247.0], [64.8, 85247.0], [64.9, 85247.0], [65.0, 85247.0], [65.1, 85294.0], [65.2, 85294.0], [65.3, 85294.0], [65.4, 85422.0], [65.5, 85422.0], [65.6, 85422.0], [65.7, 85503.0], [65.8, 85503.0], [65.9, 85503.0], [66.0, 85503.0], [66.1, 85519.0], [66.2, 85519.0], [66.3, 85519.0], [66.4, 85620.0], [66.5, 85620.0], [66.6, 85620.0], [66.7, 85623.0], [66.8, 85623.0], [66.9, 85623.0], [67.0, 85623.0], [67.1, 85626.0], [67.2, 85626.0], [67.3, 85626.0], [67.4, 85631.0], [67.5, 85631.0], [67.6, 85631.0], [67.7, 85801.0], [67.8, 85801.0], [67.9, 85801.0], [68.0, 85801.0], [68.1, 85833.0], [68.2, 85833.0], [68.3, 85833.0], [68.4, 85893.0], [68.5, 85893.0], [68.6, 85893.0], [68.7, 85968.0], [68.8, 85968.0], [68.9, 85968.0], [69.0, 85968.0], [69.1, 85986.0], [69.2, 85986.0], [69.3, 85986.0], [69.4, 86026.0], [69.5, 86026.0], [69.6, 86026.0], [69.7, 86028.0], [69.8, 86028.0], [69.9, 86028.0], [70.0, 86028.0], [70.1, 86124.0], [70.2, 86124.0], [70.3, 86124.0], [70.4, 86135.0], [70.5, 86135.0], [70.6, 86135.0], [70.7, 86151.0], [70.8, 86151.0], [70.9, 86151.0], [71.0, 86151.0], [71.1, 86162.0], [71.2, 86162.0], [71.3, 86162.0], [71.4, 86178.0], [71.5, 86178.0], [71.6, 86178.0], [71.7, 86227.0], [71.8, 86227.0], [71.9, 86227.0], [72.0, 86227.0], [72.1, 86252.0], [72.2, 86252.0], [72.3, 86252.0], [72.4, 86254.0], [72.5, 86254.0], [72.6, 86254.0], [72.7, 86305.0], [72.8, 86305.0], [72.9, 86305.0], [73.0, 86305.0], [73.1, 86326.0], [73.2, 86326.0], [73.3, 86326.0], [73.4, 86384.0], [73.5, 86384.0], [73.6, 86384.0], [73.7, 86416.0], [73.8, 86416.0], [73.9, 86416.0], [74.0, 86416.0], [74.1, 86442.0], [74.2, 86442.0], [74.3, 86442.0], [74.4, 86451.0], [74.5, 86451.0], [74.6, 86451.0], [74.7, 86452.0], [74.8, 86452.0], [74.9, 86452.0], [75.0, 86468.0], [75.1, 86468.0], [75.2, 86468.0], [75.3, 86468.0], [75.4, 86581.0], [75.5, 86581.0], [75.6, 86581.0], [75.7, 86594.0], [75.8, 86594.0], [75.9, 86594.0], [76.0, 86634.0], [76.1, 86634.0], [76.2, 86634.0], [76.3, 86634.0], [76.4, 86669.0], [76.5, 86669.0], [76.6, 86669.0], [76.7, 86687.0], [76.8, 86687.0], [76.9, 86687.0], [77.0, 86776.0], [77.1, 86776.0], [77.2, 86776.0], [77.3, 86776.0], [77.4, 86808.0], [77.5, 86808.0], [77.6, 86808.0], [77.7, 86835.0], [77.8, 86835.0], [77.9, 86835.0], [78.0, 86844.0], [78.1, 86844.0], [78.2, 86844.0], [78.3, 86844.0], [78.4, 86845.0], [78.5, 86845.0], [78.6, 86845.0], [78.7, 86861.0], [78.8, 86861.0], [78.9, 86861.0], [79.0, 86895.0], [79.1, 86895.0], [79.2, 86895.0], [79.3, 86895.0], [79.4, 86909.0], [79.5, 86909.0], [79.6, 86909.0], [79.7, 86927.0], [79.8, 86927.0], [79.9, 86927.0], [80.0, 86975.0], [80.1, 86975.0], [80.2, 86975.0], [80.3, 86975.0], [80.4, 86997.0], [80.5, 86997.0], [80.6, 86997.0], [80.7, 87077.0], [80.8, 87077.0], [80.9, 87077.0], [81.0, 87168.0], [81.1, 87168.0], [81.2, 87168.0], [81.3, 87168.0], [81.4, 87201.0], [81.5, 87201.0], [81.6, 87201.0], [81.7, 87210.0], [81.8, 87210.0], [81.9, 87210.0], [82.0, 87268.0], [82.1, 87268.0], [82.2, 87268.0], [82.3, 87268.0], [82.4, 87415.0], [82.5, 87415.0], [82.6, 87415.0], [82.7, 87452.0], [82.8, 87452.0], [82.9, 87452.0], [83.0, 87476.0], [83.1, 87476.0], [83.2, 87476.0], [83.3, 87476.0], [83.4, 87646.0], [83.5, 87646.0], [83.6, 87646.0], [83.7, 87648.0], [83.8, 87648.0], [83.9, 87648.0], [84.0, 87657.0], [84.1, 87657.0], [84.2, 87657.0], [84.3, 87657.0], [84.4, 87676.0], [84.5, 87676.0], [84.6, 87676.0], [84.7, 87727.0], [84.8, 87727.0], [84.9, 87727.0], [85.0, 87968.0], [85.1, 87968.0], [85.2, 87968.0], [85.3, 87968.0], [85.4, 88004.0], [85.5, 88004.0], [85.6, 88004.0], [85.7, 88086.0], [85.8, 88086.0], [85.9, 88086.0], [86.0, 88284.0], [86.1, 88284.0], [86.2, 88284.0], [86.3, 88284.0], [86.4, 88514.0], [86.5, 88514.0], [86.6, 88514.0], [86.7, 89252.0], [86.8, 89252.0], [86.9, 89252.0], [87.0, 89311.0], [87.1, 89311.0], [87.2, 89311.0], [87.3, 89311.0], [87.4, 89382.0], [87.5, 89382.0], [87.6, 89382.0], [87.7, 89827.0], [87.8, 89827.0], [87.9, 89827.0], [88.0, 90057.0], [88.1, 90057.0], [88.2, 90057.0], [88.3, 90057.0], [88.4, 90066.0], [88.5, 90066.0], [88.6, 90066.0], [88.7, 90106.0], [88.8, 90106.0], [88.9, 90106.0], [89.0, 90277.0], [89.1, 90277.0], [89.2, 90277.0], [89.3, 90277.0], [89.4, 90481.0], [89.5, 90481.0], [89.6, 90481.0], [89.7, 90651.0], [89.8, 90651.0], [89.9, 90651.0], [90.0, 91268.0], [90.1, 91268.0], [90.2, 91268.0], [90.3, 91268.0], [90.4, 91307.0], [90.5, 91307.0], [90.6, 91307.0], [90.7, 91407.0], [90.8, 91407.0], [90.9, 91407.0], [91.0, 91603.0], [91.1, 91603.0], [91.2, 91603.0], [91.3, 91603.0], [91.4, 91668.0], [91.5, 91668.0], [91.6, 91668.0], [91.7, 91888.0], [91.8, 91888.0], [91.9, 91888.0], [92.0, 92010.0], [92.1, 92010.0], [92.2, 92010.0], [92.3, 92010.0], [92.4, 92208.0], [92.5, 92208.0], [92.6, 92208.0], [92.7, 92571.0], [92.8, 92571.0], [92.9, 92571.0], [93.0, 92726.0], [93.1, 92726.0], [93.2, 92726.0], [93.3, 92726.0], [93.4, 92831.0], [93.5, 92831.0], [93.6, 92831.0], [93.7, 93582.0], [93.8, 93582.0], [93.9, 93582.0], [94.0, 93651.0], [94.1, 93651.0], [94.2, 93651.0], [94.3, 93651.0], [94.4, 93867.0], [94.5, 93867.0], [94.6, 93867.0], [94.7, 93977.0], [94.8, 93977.0], [94.9, 93977.0], [95.0, 94437.0], [95.1, 94437.0], [95.2, 94437.0], [95.3, 94437.0], [95.4, 94564.0], [95.5, 94564.0], [95.6, 94564.0], [95.7, 94810.0], [95.8, 94810.0], [95.9, 94810.0], [96.0, 94936.0], [96.1, 94936.0], [96.2, 94936.0], [96.3, 94936.0], [96.4, 95109.0], [96.5, 95109.0], [96.6, 95109.0], [96.7, 95444.0], [96.8, 95444.0], [96.9, 95444.0], [97.0, 95528.0], [97.1, 95528.0], [97.2, 95528.0], [97.3, 95528.0], [97.4, 95928.0], [97.5, 95928.0], [97.6, 95928.0], [97.7, 96625.0], [97.8, 96625.0], [97.9, 96625.0], [98.0, 96734.0], [98.1, 96734.0], [98.2, 96734.0], [98.3, 96734.0], [98.4, 97165.0], [98.5, 97165.0], [98.6, 97165.0], [98.7, 97511.0], [98.8, 97511.0], [98.9, 97511.0], [99.0, 98343.0], [99.1, 98343.0], [99.2, 98343.0], [99.3, 98343.0], [99.4, 99114.0], [99.5, 99114.0], [99.6, 99114.0], [99.7, 99803.0], [99.8, 99803.0], [99.9, 99803.0]], "isOverall": false, "label": "Tablet Page", "isController": false}, {"data": [[0.0, 15119.0], [0.1, 15119.0], [0.2, 15119.0], [0.3, 15119.0], [0.4, 15564.0], [0.5, 15564.0], [0.6, 15564.0], [0.7, 16024.0], [0.8, 16024.0], [0.9, 16024.0], [1.0, 16037.0], [1.1, 16037.0], [1.2, 16037.0], [1.3, 16037.0], [1.4, 16218.0], [1.5, 16218.0], [1.6, 16218.0], [1.7, 16288.0], [1.8, 16288.0], [1.9, 16288.0], [2.0, 16597.0], [2.1, 16597.0], [2.2, 16597.0], [2.3, 16597.0], [2.4, 16646.0], [2.5, 16646.0], [2.6, 16646.0], [2.7, 16978.0], [2.8, 16978.0], [2.9, 16978.0], [3.0, 17210.0], [3.1, 17210.0], [3.2, 17210.0], [3.3, 17210.0], [3.4, 17252.0], [3.5, 17252.0], [3.6, 17252.0], [3.7, 17660.0], [3.8, 17660.0], [3.9, 17660.0], [4.0, 18030.0], [4.1, 18030.0], [4.2, 18030.0], [4.3, 18030.0], [4.4, 18254.0], [4.5, 18254.0], [4.6, 18254.0], [4.7, 18355.0], [4.8, 18355.0], [4.9, 18355.0], [5.0, 18803.0], [5.1, 18803.0], [5.2, 18803.0], [5.3, 18803.0], [5.4, 19083.0], [5.5, 19083.0], [5.6, 19083.0], [5.7, 19361.0], [5.8, 19361.0], [5.9, 19361.0], [6.0, 19771.0], [6.1, 19771.0], [6.2, 19771.0], [6.3, 19771.0], [6.4, 20171.0], [6.5, 20171.0], [6.6, 20171.0], [6.7, 20935.0], [6.8, 20935.0], [6.9, 20935.0], [7.0, 21379.0], [7.1, 21379.0], [7.2, 21379.0], [7.3, 21379.0], [7.4, 21538.0], [7.5, 21538.0], [7.6, 21538.0], [7.7, 22009.0], [7.8, 22009.0], [7.9, 22009.0], [8.0, 22414.0], [8.1, 22414.0], [8.2, 22414.0], [8.3, 22414.0], [8.4, 22478.0], [8.5, 22478.0], [8.6, 22478.0], [8.7, 22770.0], [8.8, 22770.0], [8.9, 22770.0], [9.0, 23003.0], [9.1, 23003.0], [9.2, 23003.0], [9.3, 23003.0], [9.4, 23269.0], [9.5, 23269.0], [9.6, 23269.0], [9.7, 23588.0], [9.8, 23588.0], [9.9, 23588.0], [10.0, 23724.0], [10.1, 23724.0], [10.2, 23724.0], [10.3, 23724.0], [10.4, 23988.0], [10.5, 23988.0], [10.6, 23988.0], [10.7, 24163.0], [10.8, 24163.0], [10.9, 24163.0], [11.0, 24163.0], [11.1, 24597.0], [11.2, 24597.0], [11.3, 24597.0], [11.4, 24643.0], [11.5, 24643.0], [11.6, 24643.0], [11.7, 25040.0], [11.8, 25040.0], [11.9, 25040.0], [12.0, 25040.0], [12.1, 25157.0], [12.2, 25157.0], [12.3, 25157.0], [12.4, 25198.0], [12.5, 25198.0], [12.6, 25198.0], [12.7, 25420.0], [12.8, 25420.0], [12.9, 25420.0], [13.0, 25420.0], [13.1, 25715.0], [13.2, 25715.0], [13.3, 25715.0], [13.4, 26058.0], [13.5, 26058.0], [13.6, 26058.0], [13.7, 26266.0], [13.8, 26266.0], [13.9, 26266.0], [14.0, 26266.0], [14.1, 26629.0], [14.2, 26629.0], [14.3, 26629.0], [14.4, 26696.0], [14.5, 26696.0], [14.6, 26696.0], [14.7, 26893.0], [14.8, 26893.0], [14.9, 26893.0], [15.0, 26893.0], [15.1, 26901.0], [15.2, 26901.0], [15.3, 26901.0], [15.4, 27126.0], [15.5, 27126.0], [15.6, 27126.0], [15.7, 27474.0], [15.8, 27474.0], [15.9, 27474.0], [16.0, 27474.0], [16.1, 27528.0], [16.2, 27528.0], [16.3, 27528.0], [16.4, 28089.0], [16.5, 28089.0], [16.6, 28089.0], [16.7, 28378.0], [16.8, 28378.0], [16.9, 28378.0], [17.0, 28378.0], [17.1, 28583.0], [17.2, 28583.0], [17.3, 28583.0], [17.4, 28676.0], [17.5, 28676.0], [17.6, 28676.0], [17.7, 29324.0], [17.8, 29324.0], [17.9, 29324.0], [18.0, 29324.0], [18.1, 29352.0], [18.2, 29352.0], [18.3, 29352.0], [18.4, 29603.0], [18.5, 29603.0], [18.6, 29603.0], [18.7, 29953.0], [18.8, 29953.0], [18.9, 29953.0], [19.0, 30292.0], [19.1, 30292.0], [19.2, 30292.0], [19.3, 30292.0], [19.4, 30451.0], [19.5, 30451.0], [19.6, 30451.0], [19.7, 30648.0], [19.8, 30648.0], [19.9, 30648.0], [20.0, 31018.0], [20.1, 31018.0], [20.2, 31018.0], [20.3, 31018.0], [20.4, 31131.0], [20.5, 31131.0], [20.6, 31131.0], [20.7, 31281.0], [20.8, 31281.0], [20.9, 31281.0], [21.0, 31541.0], [21.1, 31541.0], [21.2, 31541.0], [21.3, 31541.0], [21.4, 31841.0], [21.5, 31841.0], [21.6, 31841.0], [21.7, 32110.0], [21.8, 32110.0], [21.9, 32110.0], [22.0, 32400.0], [22.1, 32400.0], [22.2, 32400.0], [22.3, 32400.0], [22.4, 32584.0], [22.5, 32584.0], [22.6, 32584.0], [22.7, 32883.0], [22.8, 32883.0], [22.9, 32883.0], [23.0, 33270.0], [23.1, 33270.0], [23.2, 33270.0], [23.3, 33270.0], [23.4, 33415.0], [23.5, 33415.0], [23.6, 33415.0], [23.7, 33676.0], [23.8, 33676.0], [23.9, 33676.0], [24.0, 34051.0], [24.1, 34051.0], [24.2, 34051.0], [24.3, 34051.0], [24.4, 34517.0], [24.5, 34517.0], [24.6, 34517.0], [24.7, 34730.0], [24.8, 34730.0], [24.9, 34730.0], [25.0, 34886.0], [25.1, 34886.0], [25.2, 34886.0], [25.3, 34886.0], [25.4, 35002.0], [25.5, 35002.0], [25.6, 35002.0], [25.7, 35183.0], [25.8, 35183.0], [25.9, 35183.0], [26.0, 35358.0], [26.1, 35358.0], [26.2, 35358.0], [26.3, 35358.0], [26.4, 35519.0], [26.5, 35519.0], [26.6, 35519.0], [26.7, 35754.0], [26.8, 35754.0], [26.9, 35754.0], [27.0, 36213.0], [27.1, 36213.0], [27.2, 36213.0], [27.3, 36213.0], [27.4, 36910.0], [27.5, 36910.0], [27.6, 36910.0], [27.7, 36911.0], [27.8, 36911.0], [27.9, 36911.0], [28.0, 37239.0], [28.1, 37239.0], [28.2, 37239.0], [28.3, 37239.0], [28.4, 37339.0], [28.5, 37339.0], [28.6, 37339.0], [28.7, 37610.0], [28.8, 37610.0], [28.9, 37610.0], [29.0, 37612.0], [29.1, 37612.0], [29.2, 37612.0], [29.3, 37612.0], [29.4, 38024.0], [29.5, 38024.0], [29.6, 38024.0], [29.7, 38244.0], [29.8, 38244.0], [29.9, 38244.0], [30.0, 38424.0], [30.1, 38424.0], [30.2, 38424.0], [30.3, 38424.0], [30.4, 38606.0], [30.5, 38606.0], [30.6, 38606.0], [30.7, 38772.0], [30.8, 38772.0], [30.9, 38772.0], [31.0, 39409.0], [31.1, 39409.0], [31.2, 39409.0], [31.3, 39409.0], [31.4, 39793.0], [31.5, 39793.0], [31.6, 39793.0], [31.7, 40011.0], [31.8, 40011.0], [31.9, 40011.0], [32.0, 40108.0], [32.1, 40108.0], [32.2, 40108.0], [32.3, 40108.0], [32.4, 40183.0], [32.5, 40183.0], [32.6, 40183.0], [32.7, 40427.0], [32.8, 40427.0], [32.9, 40427.0], [33.0, 40828.0], [33.1, 40828.0], [33.2, 40828.0], [33.3, 40828.0], [33.4, 41529.0], [33.5, 41529.0], [33.6, 41529.0], [33.7, 41842.0], [33.8, 41842.0], [33.9, 41842.0], [34.0, 41903.0], [34.1, 41903.0], [34.2, 41903.0], [34.3, 41903.0], [34.4, 42219.0], [34.5, 42219.0], [34.6, 42219.0], [34.7, 42503.0], [34.8, 42503.0], [34.9, 42503.0], [35.0, 42774.0], [35.1, 42774.0], [35.2, 42774.0], [35.3, 42774.0], [35.4, 42815.0], [35.5, 42815.0], [35.6, 42815.0], [35.7, 43058.0], [35.8, 43058.0], [35.9, 43058.0], [36.0, 43536.0], [36.1, 43536.0], [36.2, 43536.0], [36.3, 43536.0], [36.4, 43853.0], [36.5, 43853.0], [36.6, 43853.0], [36.7, 44119.0], [36.8, 44119.0], [36.9, 44119.0], [37.0, 44362.0], [37.1, 44362.0], [37.2, 44362.0], [37.3, 44362.0], [37.4, 44709.0], [37.5, 44709.0], [37.6, 44709.0], [37.7, 44964.0], [37.8, 44964.0], [37.9, 44964.0], [38.0, 44992.0], [38.1, 44992.0], [38.2, 44992.0], [38.3, 44992.0], [38.4, 45210.0], [38.5, 45210.0], [38.6, 45210.0], [38.7, 45699.0], [38.8, 45699.0], [38.9, 45699.0], [39.0, 45895.0], [39.1, 45895.0], [39.2, 45895.0], [39.3, 45895.0], [39.4, 45962.0], [39.5, 45962.0], [39.6, 45962.0], [39.7, 46254.0], [39.8, 46254.0], [39.9, 46254.0], [40.0, 46254.0], [40.1, 46618.0], [40.2, 46618.0], [40.3, 46618.0], [40.4, 46752.0], [40.5, 46752.0], [40.6, 46752.0], [40.7, 46944.0], [40.8, 46944.0], [40.9, 46944.0], [41.0, 46944.0], [41.1, 47170.0], [41.2, 47170.0], [41.3, 47170.0], [41.4, 47390.0], [41.5, 47390.0], [41.6, 47390.0], [41.7, 47754.0], [41.8, 47754.0], [41.9, 47754.0], [42.0, 47754.0], [42.1, 47933.0], [42.2, 47933.0], [42.3, 47933.0], [42.4, 48144.0], [42.5, 48144.0], [42.6, 48144.0], [42.7, 48312.0], [42.8, 48312.0], [42.9, 48312.0], [43.0, 48312.0], [43.1, 48677.0], [43.2, 48677.0], [43.3, 48677.0], [43.4, 49078.0], [43.5, 49078.0], [43.6, 49078.0], [43.7, 49266.0], [43.8, 49266.0], [43.9, 49266.0], [44.0, 49266.0], [44.1, 49684.0], [44.2, 49684.0], [44.3, 49684.0], [44.4, 50115.0], [44.5, 50115.0], [44.6, 50115.0], [44.7, 50164.0], [44.8, 50164.0], [44.9, 50164.0], [45.0, 50164.0], [45.1, 50386.0], [45.2, 50386.0], [45.3, 50386.0], [45.4, 50463.0], [45.5, 50463.0], [45.6, 50463.0], [45.7, 50919.0], [45.8, 50919.0], [45.9, 50919.0], [46.0, 50919.0], [46.1, 51001.0], [46.2, 51001.0], [46.3, 51001.0], [46.4, 51316.0], [46.5, 51316.0], [46.6, 51316.0], [46.7, 51425.0], [46.8, 51425.0], [46.9, 51425.0], [47.0, 51425.0], [47.1, 51643.0], [47.2, 51643.0], [47.3, 51643.0], [47.4, 52169.0], [47.5, 52169.0], [47.6, 52169.0], [47.7, 52385.0], [47.8, 52385.0], [47.9, 52385.0], [48.0, 52385.0], [48.1, 52433.0], [48.2, 52433.0], [48.3, 52433.0], [48.4, 52634.0], [48.5, 52634.0], [48.6, 52634.0], [48.7, 52926.0], [48.8, 52926.0], [48.9, 52926.0], [49.0, 52926.0], [49.1, 53147.0], [49.2, 53147.0], [49.3, 53147.0], [49.4, 53173.0], [49.5, 53173.0], [49.6, 53173.0], [49.7, 53413.0], [49.8, 53413.0], [49.9, 53413.0], [50.0, 53413.0], [50.1, 53513.0], [50.2, 53513.0], [50.3, 53513.0], [50.4, 53976.0], [50.5, 53976.0], [50.6, 53976.0], [50.7, 54492.0], [50.8, 54492.0], [50.9, 54492.0], [51.0, 54492.0], [51.1, 54873.0], [51.2, 54873.0], [51.3, 54873.0], [51.4, 55159.0], [51.5, 55159.0], [51.6, 55159.0], [51.7, 55432.0], [51.8, 55432.0], [51.9, 55432.0], [52.0, 55432.0], [52.1, 55711.0], [52.2, 55711.0], [52.3, 55711.0], [52.4, 56200.0], [52.5, 56200.0], [52.6, 56200.0], [52.7, 56351.0], [52.8, 56351.0], [52.9, 56351.0], [53.0, 56351.0], [53.1, 56634.0], [53.2, 56634.0], [53.3, 56634.0], [53.4, 57104.0], [53.5, 57104.0], [53.6, 57104.0], [53.7, 57165.0], [53.8, 57165.0], [53.9, 57165.0], [54.0, 57165.0], [54.1, 57296.0], [54.2, 57296.0], [54.3, 57296.0], [54.4, 57502.0], [54.5, 57502.0], [54.6, 57502.0], [54.7, 57564.0], [54.8, 57564.0], [54.9, 57564.0], [55.0, 57564.0], [55.1, 57858.0], [55.2, 57858.0], [55.3, 57858.0], [55.4, 58040.0], [55.5, 58040.0], [55.6, 58040.0], [55.7, 58194.0], [55.8, 58194.0], [55.9, 58194.0], [56.0, 58194.0], [56.1, 58685.0], [56.2, 58685.0], [56.3, 58685.0], [56.4, 59229.0], [56.5, 59229.0], [56.6, 59229.0], [56.7, 59361.0], [56.8, 59361.0], [56.9, 59361.0], [57.0, 59361.0], [57.1, 59647.0], [57.2, 59647.0], [57.3, 59647.0], [57.4, 59722.0], [57.5, 59722.0], [57.6, 59722.0], [57.7, 60337.0], [57.8, 60337.0], [57.9, 60337.0], [58.0, 60337.0], [58.1, 60450.0], [58.2, 60450.0], [58.3, 60450.0], [58.4, 60672.0], [58.5, 60672.0], [58.6, 60672.0], [58.7, 60996.0], [58.8, 60996.0], [58.9, 60996.0], [59.0, 60996.0], [59.1, 61371.0], [59.2, 61371.0], [59.3, 61371.0], [59.4, 61417.0], [59.5, 61417.0], [59.6, 61417.0], [59.7, 61650.0], [59.8, 61650.0], [59.9, 61650.0], [60.0, 61650.0], [60.1, 61654.0], [60.2, 61654.0], [60.3, 61654.0], [60.4, 61807.0], [60.5, 61807.0], [60.6, 61807.0], [60.7, 62473.0], [60.8, 62473.0], [60.9, 62473.0], [61.0, 62473.0], [61.1, 62528.0], [61.2, 62528.0], [61.3, 62528.0], [61.4, 62778.0], [61.5, 62778.0], [61.6, 62778.0], [61.7, 63034.0], [61.8, 63034.0], [61.9, 63034.0], [62.0, 63034.0], [62.1, 63355.0], [62.2, 63355.0], [62.3, 63355.0], [62.4, 63779.0], [62.5, 63779.0], [62.6, 63779.0], [62.7, 64076.0], [62.8, 64076.0], [62.9, 64076.0], [63.0, 64076.0], [63.1, 64356.0], [63.2, 64356.0], [63.3, 64356.0], [63.4, 64403.0], [63.5, 64403.0], [63.6, 64403.0], [63.7, 64842.0], [63.8, 64842.0], [63.9, 64842.0], [64.0, 64842.0], [64.1, 64974.0], [64.2, 64974.0], [64.3, 64974.0], [64.4, 65173.0], [64.5, 65173.0], [64.6, 65173.0], [64.7, 65314.0], [64.8, 65314.0], [64.9, 65314.0], [65.0, 65314.0], [65.1, 65382.0], [65.2, 65382.0], [65.3, 65382.0], [65.4, 65751.0], [65.5, 65751.0], [65.6, 65751.0], [65.7, 65865.0], [65.8, 65865.0], [65.9, 65865.0], [66.0, 65865.0], [66.1, 66068.0], [66.2, 66068.0], [66.3, 66068.0], [66.4, 66252.0], [66.5, 66252.0], [66.6, 66252.0], [66.7, 66771.0], [66.8, 66771.0], [66.9, 66771.0], [67.0, 66771.0], [67.1, 67403.0], [67.2, 67403.0], [67.3, 67403.0], [67.4, 67456.0], [67.5, 67456.0], [67.6, 67456.0], [67.7, 67746.0], [67.8, 67746.0], [67.9, 67746.0], [68.0, 67746.0], [68.1, 68025.0], [68.2, 68025.0], [68.3, 68025.0], [68.4, 68036.0], [68.5, 68036.0], [68.6, 68036.0], [68.7, 68199.0], [68.8, 68199.0], [68.9, 68199.0], [69.0, 68199.0], [69.1, 68427.0], [69.2, 68427.0], [69.3, 68427.0], [69.4, 68561.0], [69.5, 68561.0], [69.6, 68561.0], [69.7, 69220.0], [69.8, 69220.0], [69.9, 69220.0], [70.0, 69220.0], [70.1, 69510.0], [70.2, 69510.0], [70.3, 69510.0], [70.4, 69694.0], [70.5, 69694.0], [70.6, 69694.0], [70.7, 69988.0], [70.8, 69988.0], [70.9, 69988.0], [71.0, 69988.0], [71.1, 70333.0], [71.2, 70333.0], [71.3, 70333.0], [71.4, 70439.0], [71.5, 70439.0], [71.6, 70439.0], [71.7, 70782.0], [71.8, 70782.0], [71.9, 70782.0], [72.0, 70782.0], [72.1, 71076.0], [72.2, 71076.0], [72.3, 71076.0], [72.4, 71452.0], [72.5, 71452.0], [72.6, 71452.0], [72.7, 71565.0], [72.8, 71565.0], [72.9, 71565.0], [73.0, 71565.0], [73.1, 71806.0], [73.2, 71806.0], [73.3, 71806.0], [73.4, 72195.0], [73.5, 72195.0], [73.6, 72195.0], [73.7, 72567.0], [73.8, 72567.0], [73.9, 72567.0], [74.0, 72567.0], [74.1, 72645.0], [74.2, 72645.0], [74.3, 72645.0], [74.4, 72810.0], [74.5, 72810.0], [74.6, 72810.0], [74.7, 73115.0], [74.8, 73115.0], [74.9, 73115.0], [75.0, 73115.0], [75.1, 73510.0], [75.2, 73510.0], [75.3, 73510.0], [75.4, 73519.0], [75.5, 73519.0], [75.6, 73519.0], [75.7, 73651.0], [75.8, 73651.0], [75.9, 73651.0], [76.0, 73773.0], [76.1, 73773.0], [76.2, 73773.0], [76.3, 73773.0], [76.4, 74095.0], [76.5, 74095.0], [76.6, 74095.0], [76.7, 74775.0], [76.8, 74775.0], [76.9, 74775.0], [77.0, 74813.0], [77.1, 74813.0], [77.2, 74813.0], [77.3, 74813.0], [77.4, 74965.0], [77.5, 74965.0], [77.6, 74965.0], [77.7, 75199.0], [77.8, 75199.0], [77.9, 75199.0], [78.0, 75289.0], [78.1, 75289.0], [78.2, 75289.0], [78.3, 75289.0], [78.4, 75627.0], [78.5, 75627.0], [78.6, 75627.0], [78.7, 75941.0], [78.8, 75941.0], [78.9, 75941.0], [79.0, 76228.0], [79.1, 76228.0], [79.2, 76228.0], [79.3, 76228.0], [79.4, 76343.0], [79.5, 76343.0], [79.6, 76343.0], [79.7, 76749.0], [79.8, 76749.0], [79.9, 76749.0], [80.0, 77014.0], [80.1, 77014.0], [80.2, 77014.0], [80.3, 77014.0], [80.4, 77392.0], [80.5, 77392.0], [80.6, 77392.0], [80.7, 77436.0], [80.8, 77436.0], [80.9, 77436.0], [81.0, 77797.0], [81.1, 77797.0], [81.2, 77797.0], [81.3, 77797.0], [81.4, 78257.0], [81.5, 78257.0], [81.6, 78257.0], [81.7, 78517.0], [81.8, 78517.0], [81.9, 78517.0], [82.0, 78522.0], [82.1, 78522.0], [82.2, 78522.0], [82.3, 78522.0], [82.4, 78942.0], [82.5, 78942.0], [82.6, 78942.0], [82.7, 79294.0], [82.8, 79294.0], [82.9, 79294.0], [83.0, 79541.0], [83.1, 79541.0], [83.2, 79541.0], [83.3, 79541.0], [83.4, 79640.0], [83.5, 79640.0], [83.6, 79640.0], [83.7, 80054.0], [83.8, 80054.0], [83.9, 80054.0], [84.0, 80417.0], [84.1, 80417.0], [84.2, 80417.0], [84.3, 80417.0], [84.4, 80601.0], [84.5, 80601.0], [84.6, 80601.0], [84.7, 80697.0], [84.8, 80697.0], [84.9, 80697.0], [85.0, 80886.0], [85.1, 80886.0], [85.2, 80886.0], [85.3, 80886.0], [85.4, 81116.0], [85.5, 81116.0], [85.6, 81116.0], [85.7, 81584.0], [85.8, 81584.0], [85.9, 81584.0], [86.0, 81766.0], [86.1, 81766.0], [86.2, 81766.0], [86.3, 81766.0], [86.4, 81891.0], [86.5, 81891.0], [86.6, 81891.0], [86.7, 82226.0], [86.8, 82226.0], [86.9, 82226.0], [87.0, 82682.0], [87.1, 82682.0], [87.2, 82682.0], [87.3, 82682.0], [87.4, 83070.0], [87.5, 83070.0], [87.6, 83070.0], [87.7, 83266.0], [87.8, 83266.0], [87.9, 83266.0], [88.0, 83408.0], [88.1, 83408.0], [88.2, 83408.0], [88.3, 83408.0], [88.4, 83909.0], [88.5, 83909.0], [88.6, 83909.0], [88.7, 84052.0], [88.8, 84052.0], [88.9, 84052.0], [89.0, 84617.0], [89.1, 84617.0], [89.2, 84617.0], [89.3, 84617.0], [89.4, 84948.0], [89.5, 84948.0], [89.6, 84948.0], [89.7, 85088.0], [89.8, 85088.0], [89.9, 85088.0], [90.0, 85349.0], [90.1, 85349.0], [90.2, 85349.0], [90.3, 85349.0], [90.4, 85904.0], [90.5, 85904.0], [90.6, 85904.0], [90.7, 86310.0], [90.8, 86310.0], [90.9, 86310.0], [91.0, 86324.0], [91.1, 86324.0], [91.2, 86324.0], [91.3, 86324.0], [91.4, 86687.0], [91.5, 86687.0], [91.6, 86687.0], [91.7, 87099.0], [91.8, 87099.0], [91.9, 87099.0], [92.0, 87279.0], [92.1, 87279.0], [92.2, 87279.0], [92.3, 87279.0], [92.4, 88181.0], [92.5, 88181.0], [92.6, 88181.0], [92.7, 91057.0], [92.8, 91057.0], [92.9, 91057.0], [93.0, 91396.0], [93.1, 91396.0], [93.2, 91396.0], [93.3, 91396.0], [93.4, 91662.0], [93.5, 91662.0], [93.6, 91662.0], [93.7, 92276.0], [93.8, 92276.0], [93.9, 92276.0], [94.0, 92570.0], [94.1, 92570.0], [94.2, 92570.0], [94.3, 92570.0], [94.4, 92722.0], [94.5, 92722.0], [94.6, 92722.0], [94.7, 94293.0], [94.8, 94293.0], [94.9, 94293.0], [95.0, 94311.0], [95.1, 94311.0], [95.2, 94311.0], [95.3, 94311.0], [95.4, 94969.0], [95.5, 94969.0], [95.6, 94969.0], [95.7, 95111.0], [95.8, 95111.0], [95.9, 95111.0], [96.0, 95135.0], [96.1, 95135.0], [96.2, 95135.0], [96.3, 95135.0], [96.4, 95337.0], [96.5, 95337.0], [96.6, 95337.0], [96.7, 95458.0], [96.8, 95458.0], [96.9, 95458.0], [97.0, 95819.0], [97.1, 95819.0], [97.2, 95819.0], [97.3, 95819.0], [97.4, 96088.0], [97.5, 96088.0], [97.6, 96088.0], [97.7, 96233.0], [97.8, 96233.0], [97.9, 96233.0], [98.0, 96315.0], [98.1, 96315.0], [98.2, 96315.0], [98.3, 96315.0], [98.4, 96619.0], [98.5, 96619.0], [98.6, 96619.0], [98.7, 96633.0], [98.8, 96633.0], [98.9, 96633.0], [99.0, 96646.0], [99.1, 96646.0], [99.2, 96646.0], [99.3, 96646.0], [99.4, 96879.0], [99.5, 96879.0], [99.6, 96879.0], [99.7, 96892.0], [99.8, 96892.0], [99.9, 96892.0]], "isOverall": false, "label": "Home Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 15100.0, "maxY": 10.0, "series": [{"data": [[97500.0, 3.0], [94700.0, 1.0], [96300.0, 1.0], [95500.0, 2.0], [95900.0, 1.0], [96700.0, 1.0], [95100.0, 1.0], [99100.0, 1.0], [98700.0, 2.0], [100700.0, 1.0], [101900.0, 5.0], [102300.0, 2.0], [101100.0, 2.0], [101500.0, 1.0], [99500.0, 1.0], [99900.0, 2.0], [103100.0, 2.0], [103500.0, 2.0], [103900.0, 2.0], [105900.0, 1.0], [104300.0, 1.0], [106300.0, 1.0], [107100.0, 1.0], [106700.0, 2.0], [109900.0, 3.0], [107900.0, 2.0], [108700.0, 2.0], [109100.0, 6.0], [108300.0, 2.0], [109500.0, 4.0], [110300.0, 1.0], [112300.0, 3.0], [110700.0, 1.0], [114300.0, 2.0], [113900.0, 3.0], [111500.0, 1.0], [112700.0, 2.0], [111900.0, 1.0], [114700.0, 1.0], [115900.0, 1.0], [115100.0, 3.0], [115500.0, 1.0], [94200.0, 1.0], [95400.0, 4.0], [96200.0, 3.0], [95800.0, 3.0], [96600.0, 1.0], [99400.0, 1.0], [101400.0, 2.0], [102200.0, 5.0], [101000.0, 2.0], [100200.0, 1.0], [103000.0, 1.0], [102600.0, 3.0], [105000.0, 2.0], [103400.0, 1.0], [106200.0, 1.0], [103800.0, 4.0], [104600.0, 1.0], [110200.0, 1.0], [107000.0, 2.0], [107800.0, 3.0], [109000.0, 2.0], [109400.0, 2.0], [106600.0, 1.0], [108200.0, 1.0], [107400.0, 1.0], [109800.0, 3.0], [108600.0, 2.0], [111000.0, 2.0], [112200.0, 1.0], [112600.0, 2.0], [114200.0, 1.0], [114600.0, 1.0], [113400.0, 1.0], [115400.0, 3.0], [115800.0, 2.0], [115000.0, 4.0], [116200.0, 1.0], [98100.0, 1.0], [95300.0, 2.0], [96900.0, 1.0], [96100.0, 3.0], [94500.0, 1.0], [95700.0, 1.0], [96500.0, 1.0], [99300.0, 1.0], [98900.0, 3.0], [100900.0, 4.0], [101700.0, 2.0], [102100.0, 3.0], [100500.0, 1.0], [101300.0, 2.0], [99700.0, 1.0], [102900.0, 4.0], [102500.0, 3.0], [104100.0, 2.0], [104500.0, 2.0], [105700.0, 2.0], [107300.0, 1.0], [109700.0, 3.0], [110100.0, 4.0], [107700.0, 3.0], [108100.0, 3.0], [108500.0, 4.0], [106500.0, 1.0], [106900.0, 2.0], [108900.0, 3.0], [109300.0, 5.0], [112100.0, 1.0], [111300.0, 1.0], [111700.0, 2.0], [114500.0, 1.0], [112900.0, 1.0], [114100.0, 1.0], [115700.0, 2.0], [114900.0, 2.0], [115300.0, 1.0], [96400.0, 4.0], [95200.0, 6.0], [97200.0, 1.0], [96000.0, 2.0], [98800.0, 2.0], [102000.0, 2.0], [100800.0, 2.0], [101200.0, 4.0], [99200.0, 1.0], [103200.0, 1.0], [102400.0, 3.0], [104800.0, 1.0], [103600.0, 1.0], [110000.0, 3.0], [107200.0, 4.0], [107600.0, 2.0], [109200.0, 4.0], [108000.0, 5.0], [109600.0, 3.0], [108400.0, 7.0], [113200.0, 1.0], [112000.0, 3.0], [110800.0, 1.0], [114400.0, 1.0], [115600.0, 1.0], [114800.0, 3.0], [115200.0, 1.0]], "isOverall": false, "label": "Checkout Page", "isController": false}, {"data": [[94100.0, 2.0], [93900.0, 4.0], [93100.0, 1.0], [92300.0, 1.0], [92900.0, 1.0], [97700.0, 4.0], [94900.0, 2.0], [95100.0, 3.0], [94700.0, 1.0], [96500.0, 10.0], [97100.0, 6.0], [96700.0, 7.0], [96900.0, 2.0], [97300.0, 4.0], [97500.0, 4.0], [98100.0, 5.0], [96300.0, 10.0], [98300.0, 3.0], [97900.0, 7.0], [95700.0, 4.0], [95500.0, 2.0], [95300.0, 3.0], [94500.0, 6.0], [95900.0, 4.0], [96100.0, 7.0], [98500.0, 6.0], [99300.0, 3.0], [98900.0, 5.0], [98700.0, 1.0], [99100.0, 3.0], [100500.0, 1.0], [99500.0, 2.0], [100100.0, 2.0], [99900.0, 4.0], [100300.0, 3.0], [100700.0, 3.0], [100900.0, 5.0], [93600.0, 1.0], [93200.0, 1.0], [93400.0, 1.0], [94000.0, 1.0], [93800.0, 2.0], [94200.0, 3.0], [93000.0, 1.0], [98000.0, 9.0], [96800.0, 6.0], [97000.0, 5.0], [97200.0, 3.0], [96600.0, 5.0], [96400.0, 10.0], [98200.0, 3.0], [95000.0, 10.0], [95200.0, 4.0], [97400.0, 9.0], [97600.0, 7.0], [97800.0, 3.0], [95400.0, 3.0], [96000.0, 6.0], [95800.0, 4.0], [95600.0, 6.0], [94400.0, 4.0], [96200.0, 5.0], [94800.0, 5.0], [98400.0, 4.0], [100400.0, 1.0], [99800.0, 3.0], [99400.0, 1.0], [100000.0, 3.0], [100600.0, 6.0], [98600.0, 5.0], [98800.0, 3.0], [99200.0, 2.0], [99000.0, 9.0], [100200.0, 3.0], [100800.0, 1.0], [101000.0, 1.0]], "isOverall": false, "label": "Cart Page", "isController": false}, {"data": [[75500.0, 1.0], [76300.0, 1.0], [76700.0, 1.0], [75900.0, 1.0], [75100.0, 1.0], [80300.0, 2.0], [79900.0, 1.0], [80700.0, 1.0], [81100.0, 2.0], [78700.0, 3.0], [81500.0, 3.0], [81900.0, 1.0], [85500.0, 2.0], [82300.0, 4.0], [83900.0, 4.0], [82700.0, 4.0], [83500.0, 5.0], [83100.0, 2.0], [84700.0, 4.0], [84300.0, 3.0], [85900.0, 2.0], [85100.0, 4.0], [86300.0, 3.0], [87100.0, 1.0], [87900.0, 1.0], [86700.0, 1.0], [92700.0, 1.0], [93900.0, 1.0], [93500.0, 1.0], [95100.0, 1.0], [95900.0, 1.0], [95500.0, 1.0], [96700.0, 1.0], [97100.0, 1.0], [97500.0, 1.0], [98300.0, 1.0], [99100.0, 1.0], [77400.0, 3.0], [76200.0, 2.0], [81800.0, 5.0], [81400.0, 2.0], [80200.0, 1.0], [81000.0, 5.0], [79000.0, 2.0], [79400.0, 4.0], [79800.0, 1.0], [80600.0, 1.0], [85400.0, 1.0], [83800.0, 2.0], [82200.0, 3.0], [83400.0, 4.0], [83000.0, 4.0], [84600.0, 5.0], [84200.0, 1.0], [85800.0, 3.0], [85000.0, 1.0], [82600.0, 4.0], [86200.0, 3.0], [87400.0, 3.0], [86600.0, 3.0], [87000.0, 1.0], [88200.0, 1.0], [89800.0, 1.0], [90200.0, 1.0], [90600.0, 1.0], [92200.0, 1.0], [93800.0, 1.0], [91400.0, 1.0], [91800.0, 1.0], [95400.0, 1.0], [96600.0, 1.0], [99800.0, 1.0], [76900.0, 1.0], [76500.0, 2.0], [74100.0, 1.0], [75300.0, 1.0], [75700.0, 1.0], [81300.0, 2.0], [80900.0, 4.0], [80100.0, 3.0], [79700.0, 2.0], [79300.0, 2.0], [78900.0, 1.0], [78500.0, 2.0], [81700.0, 3.0], [82500.0, 5.0], [82100.0, 4.0], [82900.0, 4.0], [83300.0, 3.0], [83700.0, 3.0], [84900.0, 3.0], [84500.0, 2.0], [84100.0, 3.0], [86100.0, 5.0], [86900.0, 4.0], [86500.0, 2.0], [87700.0, 1.0], [89300.0, 2.0], [88500.0, 1.0], [90100.0, 1.0], [91300.0, 1.0], [92500.0, 1.0], [94500.0, 1.0], [94900.0, 1.0], [74400.0, 1.0], [76800.0, 1.0], [77200.0, 2.0], [75200.0, 1.0], [75600.0, 1.0], [80800.0, 5.0], [81200.0, 2.0], [78400.0, 1.0], [78800.0, 2.0], [81600.0, 4.0], [80400.0, 2.0], [86000.0, 2.0], [82400.0, 2.0], [82000.0, 1.0], [82800.0, 2.0], [84400.0, 4.0], [84800.0, 3.0], [84000.0, 2.0], [85200.0, 4.0], [85600.0, 4.0], [83200.0, 3.0], [83600.0, 3.0], [86400.0, 5.0], [86800.0, 6.0], [87200.0, 3.0], [87600.0, 4.0], [88000.0, 2.0], [90000.0, 2.0], [89200.0, 1.0], [90400.0, 1.0], [92000.0, 1.0], [91600.0, 2.0], [93600.0, 1.0], [91200.0, 1.0], [92800.0, 1.0], [94800.0, 1.0], [94400.0, 1.0]], "isOverall": false, "label": "Tablet Page", "isController": false}, {"data": [[66700.0, 1.0], [69900.0, 1.0], [70700.0, 1.0], [71500.0, 1.0], [73100.0, 1.0], [74700.0, 1.0], [76300.0, 1.0], [79500.0, 1.0], [81100.0, 1.0], [85900.0, 1.0], [96300.0, 1.0], [34500.0, 1.0], [35300.0, 1.0], [35700.0, 1.0], [36900.0, 2.0], [37300.0, 1.0], [40100.0, 2.0], [39700.0, 1.0], [42500.0, 1.0], [44100.0, 1.0], [44900.0, 2.0], [46900.0, 1.0], [47300.0, 1.0], [47700.0, 1.0], [48100.0, 1.0], [50900.0, 1.0], [50100.0, 2.0], [52900.0, 1.0], [51300.0, 1.0], [52100.0, 1.0], [55700.0, 1.0], [58100.0, 1.0], [59300.0, 1.0], [59700.0, 1.0], [60900.0, 1.0], [61300.0, 1.0], [63300.0, 1.0], [62500.0, 1.0], [65300.0, 2.0], [63700.0, 1.0], [64900.0, 1.0], [65800.0, 1.0], [67400.0, 2.0], [71400.0, 1.0], [77000.0, 1.0], [76200.0, 1.0], [81800.0, 1.0], [82600.0, 1.0], [83400.0, 1.0], [85000.0, 1.0], [86600.0, 1.0], [92200.0, 1.0], [95400.0, 1.0], [96200.0, 1.0], [65700.0, 1.0], [68100.0, 1.0], [72100.0, 1.0], [73700.0, 1.0], [77700.0, 1.0], [78500.0, 2.0], [81700.0, 1.0], [84900.0, 1.0], [88100.0, 1.0], [91300.0, 1.0], [95300.0, 1.0], [15100.0, 1.0], [15500.0, 1.0], [16000.0, 2.0], [16200.0, 2.0], [16600.0, 1.0], [17200.0, 2.0], [17600.0, 1.0], [18000.0, 1.0], [18200.0, 1.0], [18800.0, 1.0], [19000.0, 1.0], [22000.0, 1.0], [22400.0, 2.0], [23000.0, 1.0], [23200.0, 1.0], [24600.0, 1.0], [25000.0, 1.0], [25400.0, 1.0], [26600.0, 2.0], [26000.0, 1.0], [26200.0, 1.0], [26800.0, 1.0], [27400.0, 1.0], [28000.0, 1.0], [28600.0, 1.0], [29600.0, 1.0], [30400.0, 1.0], [30200.0, 1.0], [30600.0, 1.0], [31200.0, 1.0], [31000.0, 1.0], [31800.0, 1.0], [32400.0, 1.0], [34000.0, 1.0], [32800.0, 1.0], [33200.0, 1.0], [33600.0, 1.0], [34800.0, 1.0], [38400.0, 1.0], [37200.0, 1.0], [37600.0, 2.0], [38000.0, 1.0], [40000.0, 1.0], [40400.0, 1.0], [40800.0, 1.0], [42800.0, 1.0], [45200.0, 1.0], [45600.0, 1.0], [49200.0, 1.0], [49600.0, 1.0], [50400.0, 1.0], [51600.0, 1.0], [52400.0, 1.0], [54400.0, 1.0], [54800.0, 1.0], [57200.0, 1.0], [58000.0, 1.0], [59200.0, 1.0], [59600.0, 1.0], [60400.0, 1.0], [61600.0, 2.0], [62400.0, 1.0], [64000.0, 1.0], [64400.0, 1.0], [64800.0, 1.0], [68000.0, 2.0], [69600.0, 1.0], [70400.0, 1.0], [72800.0, 1.0], [73600.0, 1.0], [75200.0, 1.0], [79200.0, 1.0], [80000.0, 1.0], [80800.0, 1.0], [83200.0, 1.0], [84000.0, 1.0], [87200.0, 1.0], [96800.0, 2.0], [96000.0, 1.0], [69500.0, 1.0], [73500.0, 2.0], [70300.0, 1.0], [75100.0, 1.0], [75900.0, 1.0], [76700.0, 1.0], [81500.0, 1.0], [83900.0, 1.0], [86300.0, 2.0], [92700.0, 1.0], [95100.0, 2.0], [94300.0, 1.0], [34700.0, 1.0], [35100.0, 1.0], [35500.0, 1.0], [38700.0, 1.0], [41900.0, 1.0], [41500.0, 1.0], [42700.0, 1.0], [43500.0, 1.0], [44300.0, 1.0], [44700.0, 1.0], [45900.0, 1.0], [46700.0, 1.0], [47100.0, 1.0], [47900.0, 1.0], [48300.0, 1.0], [50300.0, 1.0], [53100.0, 2.0], [52300.0, 1.0], [53500.0, 1.0], [53900.0, 1.0], [55100.0, 1.0], [57100.0, 2.0], [56300.0, 1.0], [57500.0, 2.0], [60300.0, 1.0], [62700.0, 1.0], [64300.0, 1.0], [65100.0, 1.0], [66200.0, 1.0], [71000.0, 1.0], [71800.0, 1.0], [72600.0, 1.0], [77400.0, 1.0], [78200.0, 1.0], [80600.0, 2.0], [82200.0, 1.0], [83000.0, 1.0], [84600.0, 1.0], [87000.0, 1.0], [91000.0, 1.0], [94200.0, 1.0], [95800.0, 1.0], [96600.0, 3.0], [67700.0, 1.0], [68500.0, 1.0], [72500.0, 1.0], [74900.0, 1.0], [77300.0, 1.0], [78900.0, 1.0], [85300.0, 1.0], [92500.0, 1.0], [94900.0, 1.0], [16500.0, 1.0], [16900.0, 1.0], [18300.0, 1.0], [19300.0, 1.0], [19700.0, 1.0], [20100.0, 1.0], [20900.0, 1.0], [21300.0, 1.0], [21500.0, 1.0], [22700.0, 1.0], [23500.0, 1.0], [23700.0, 1.0], [23900.0, 1.0], [24100.0, 1.0], [24500.0, 1.0], [25100.0, 2.0], [25700.0, 1.0], [26900.0, 1.0], [27100.0, 1.0], [27500.0, 1.0], [28300.0, 1.0], [28500.0, 1.0], [29300.0, 2.0], [29900.0, 1.0], [31100.0, 1.0], [31500.0, 1.0], [32100.0, 1.0], [32500.0, 1.0], [33400.0, 1.0], [35000.0, 1.0], [36200.0, 1.0], [38200.0, 1.0], [38600.0, 1.0], [39400.0, 1.0], [41800.0, 1.0], [42200.0, 1.0], [43000.0, 1.0], [43800.0, 1.0], [46600.0, 1.0], [45800.0, 1.0], [46200.0, 1.0], [48600.0, 1.0], [49000.0, 1.0], [51000.0, 1.0], [51400.0, 1.0], [52600.0, 1.0], [53400.0, 1.0], [55400.0, 1.0], [56200.0, 1.0], [56600.0, 1.0], [57800.0, 1.0], [58600.0, 1.0], [60600.0, 1.0], [61400.0, 1.0], [61800.0, 1.0], [63000.0, 1.0], [66000.0, 1.0], [68400.0, 1.0], [69200.0, 1.0], [74000.0, 1.0], [74800.0, 1.0], [75600.0, 1.0], [80400.0, 1.0], [79600.0, 1.0], [91600.0, 1.0]], "isOverall": false, "label": "Home Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 116200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1200.0, "minX": 3.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1200.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1200.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.65995826E12, "maxY": 300.0, "series": [{"data": [[1.6599585E12, 300.0], [1.65995832E12, 300.0], [1.65995838E12, 300.0], [1.65995868E12, 1.0], [1.65995826E12, 300.0], [1.65995856E12, 230.6449704142011], [1.65995862E12, 74.5], [1.65995844E12, 300.0]], "isOverall": false, "label": "Home Page", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65995868E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 54342.536666666674, "minX": 1.0, "maxY": 116221.0, "series": [{"data": [[2.0, 113413.0], [3.0, 113987.0], [4.0, 109908.0], [5.0, 114391.0], [6.0, 111909.0], [7.0, 114107.0], [8.0, 112042.0], [9.0, 114863.0], [10.0, 112350.0], [11.0, 114684.0], [12.0, 112341.0], [13.0, 115059.0], [14.0, 112909.0], [15.0, 108143.0], [16.0, 104592.0], [17.0, 114925.0], [18.0, 112700.0], [19.0, 108709.0], [20.0, 105762.0], [21.0, 115452.0], [22.0, 112744.0], [23.0, 108084.0], [24.0, 106338.0], [25.0, 114265.0], [26.0, 108489.0], [27.0, 107035.0], [28.0, 116221.0], [29.0, 108156.0], [30.0, 108265.0], [31.0, 108443.0], [33.0, 108434.0], [32.0, 115338.0], [35.0, 108993.0], [34.0, 108473.0], [37.0, 111532.0], [36.0, 114433.0], [39.0, 113908.0], [38.0, 110841.0], [41.0, 110309.0], [40.0, 113941.0], [43.0, 110759.0], [42.0, 114324.0], [45.0, 115138.0], [44.0, 112685.0], [47.0, 112684.0], [46.0, 109651.0], [49.0, 109217.0], [48.0, 115292.0], [51.0, 114593.0], [50.0, 112204.0], [53.0, 112313.0], [52.0, 108418.0], [55.0, 108493.0], [54.0, 114915.0], [57.0, 112067.0], [56.0, 107899.0], [59.0, 108467.0], [58.0, 115059.0], [61.0, 111768.0], [60.0, 107782.0], [63.0, 108079.0], [62.0, 115042.0], [67.0, 108388.0], [66.0, 115541.0], [65.0, 112042.0], [64.0, 107298.0], [71.0, 109028.0], [70.0, 115133.0], [69.0, 111715.0], [68.0, 107611.0], [75.0, 109150.0], [74.0, 115133.0], [73.0, 111024.0], [72.0, 107754.0], [79.0, 109348.0], [78.0, 115090.0], [77.0, 111391.0], [76.0, 106966.0], [83.0, 106997.0], [82.0, 109864.0], [81.0, 114817.0], [80.0, 107208.0], [87.0, 106500.0], [86.0, 109883.0], [85.0, 114836.0], [84.0, 110184.0], [91.0, 106770.0], [90.0, 109504.0], [89.0, 115601.0], [88.0, 110035.0], [95.0, 108043.0], [94.0, 109803.0], [93.0, 115842.0], [92.0, 109945.0], [99.0, 107923.0], [98.0, 109790.0], [97.0, 115885.0], [96.0, 110133.0], [103.0, 108684.0], [102.0, 109172.0], [101.0, 115750.0], [100.0, 109567.0], [107.0, 108569.0], [106.0, 109242.0], [105.0, 115900.0], [104.0, 109636.0], [111.0, 108553.0], [110.0, 109278.0], [109.0, 115484.0], [108.0, 109684.0], [115.0, 108526.0], [114.0, 109574.0], [113.0, 115776.0], [112.0, 109581.0], [119.0, 108326.0], [118.0, 110192.0], [117.0, 115491.0], [116.0, 109793.0], [123.0, 108027.0], [122.0, 110143.0], [121.0, 114750.0], [120.0, 109310.0], [127.0, 109180.0], [126.0, 108022.0], [125.0, 110266.0], [124.0, 109412.0], [135.0, 107832.0], [134.0, 108619.0], [133.0, 112126.0], [132.0, 109230.0], [131.0, 109450.0], [130.0, 109382.0], [129.0, 110084.0], [128.0, 113233.0], [143.0, 105077.0], [142.0, 105701.0], [141.0, 106253.0], [140.0, 110033.0], [139.0, 105934.0], [138.0, 106676.0], [137.0, 109983.0], [136.0, 107470.0], [151.0, 103909.0], [150.0, 109010.0], [149.0, 104317.0], [148.0, 104166.0], [147.0, 108519.0], [146.0, 104642.0], [145.0, 105084.0], [144.0, 109192.0], [159.0, 102950.0], [158.0, 108951.0], [157.0, 104159.0], [156.0, 102945.0], [155.0, 103843.0], [154.0, 108952.0], [153.0, 104576.0], [152.0, 103122.0], [167.0, 103649.0], [166.0, 102594.0], [165.0, 102217.0], [164.0, 109350.0], [163.0, 103593.0], [162.0, 102990.0], [161.0, 102660.0], [160.0, 109772.0], [175.0, 103868.0], [174.0, 103886.0], [173.0, 102326.0], [172.0, 109101.0], [171.0, 103999.0], [170.0, 103820.0], [169.0, 102187.0], [168.0, 109383.0], [183.0, 103150.0], [182.0, 103236.0], [181.0, 102286.0], [180.0, 108703.0], [179.0, 103451.0], [178.0, 103552.0], [177.0, 102593.0], [176.0, 109159.0], [191.0, 107875.0], [190.0, 102619.0], [189.0, 101201.0], [188.0, 107634.0], [187.0, 102985.0], [186.0, 103094.0], [185.0, 102043.0], [184.0, 108171.0], [199.0, 101426.0], [198.0, 107776.0], [197.0, 101918.0], [196.0, 101909.0], [195.0, 107900.0], [194.0, 102076.0], [193.0, 102242.0], [192.0, 101976.0], [207.0, 100702.0], [206.0, 107309.0], [205.0, 101240.0], [204.0, 102643.0], [203.0, 100842.0], [202.0, 107292.0], [201.0, 101249.0], [200.0, 102300.0], [215.0, 101901.0], [214.0, 107143.0], [213.0, 101158.0], [212.0, 102477.0], [211.0, 102175.0], [210.0, 107284.0], [209.0, 101360.0], [208.0, 102162.0], [223.0, 101434.0], [222.0, 107001.0], [221.0, 101780.0], [220.0, 101934.0], [219.0, 101734.0], [218.0, 106759.0], [217.0, 100961.0], [216.0, 102260.0], [231.0, 102260.0], [230.0, 100523.0], [229.0, 104818.0], [228.0, 100989.0], [227.0, 102463.0], [226.0, 100859.0], [225.0, 101235.0], [224.0, 101085.0], [239.0, 100945.0], [238.0, 102585.0], [237.0, 101557.0], [236.0, 101001.0], [235.0, 101351.0], [234.0, 102404.0], [233.0, 100990.0], [232.0, 101146.0], [247.0, 96942.0], [246.0, 99907.0], [245.0, 96434.0], [244.0, 99961.0], [243.0, 98160.0], [242.0, 97518.0], [241.0, 100201.0], [240.0, 98926.0], [255.0, 94527.0], [254.0, 96134.0], [253.0, 96104.0], [252.0, 94220.0], [251.0, 98880.0], [250.0, 95867.0], [249.0, 96177.0], [248.0, 99733.0], [270.0, 95293.0], [271.0, 95395.0], [269.0, 99257.0], [268.0, 95469.0], [267.0, 95485.0], [266.0, 98734.0], [265.0, 95976.0], [264.0, 96043.0], [263.0, 95868.0], [257.0, 96249.0], [256.0, 96218.0], [259.0, 95701.0], [258.0, 99535.0], [262.0, 98973.0], [261.0, 96220.0], [260.0, 95835.0], [286.0, 95262.0], [287.0, 96435.0], [285.0, 96426.0], [284.0, 96657.0], [283.0, 95494.0], [282.0, 95134.0], [281.0, 98840.0], [280.0, 96782.0], [279.0, 95215.0], [273.0, 99368.0], [272.0, 95568.0], [275.0, 95543.0], [274.0, 95289.0], [278.0, 95226.0], [277.0, 99493.0], [276.0, 96585.0], [296.0, 95334.0], [300.0, 98987.0], [299.0, 96391.0], [298.0, 98719.0], [297.0, 97534.0], [295.0, 94713.0], [294.0, 97562.0], [293.0, 99134.0], [292.0, 95226.0], [291.0, 97283.0], [290.0, 96468.0], [289.0, 95420.0], [288.0, 96026.0], [1.0, 111034.0]], "isOverall": false, "label": "Checkout Page", "isController": false}, {"data": [[150.5, 105698.6366666666]], "isOverall": false, "label": "Checkout Page-Aggregated", "isController": false}, {"data": [[287.0, 99050.0], [284.0, 99009.0], [300.0, 97132.63604240282], [298.0, 96509.0], [297.0, 97566.42857142857], [296.0, 97585.0], [295.0, 97478.66666666667], [292.0, 96027.0], [290.0, 99193.0]], "isOverall": false, "label": "Cart Page", "isController": false}, {"data": [[299.69, 97162.98333333331]], "isOverall": false, "label": "Cart Page-Aggregated", "isController": false}, {"data": [[300.0, 84319.44666666663]], "isOverall": false, "label": "Tablet Page", "isController": false}, {"data": [[300.0, 84319.44666666663]], "isOverall": false, "label": "Tablet Page-Aggregated", "isController": false}, {"data": [[300.0, 54342.536666666674]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[300.0, 54342.536666666674]], "isOverall": false, "label": "Home Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.65995826E12, "maxY": 10989.866666666667, "series": [{"data": [[1.6599585E12, 8507.0], [1.65995832E12, 10989.866666666667], [1.65995838E12, 8930.0], [1.65995868E12, 47.0], [1.65995826E12, 4875.916666666667], [1.65995856E12, 7943.0], [1.65995862E12, 6862.0], [1.65995844E12, 8413.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6599585E12, 0.0], [1.65995832E12, 0.0], [1.65995838E12, 0.0], [1.65995868E12, 0.0], [1.65995826E12, 0.0], [1.65995856E12, 0.0], [1.65995862E12, 0.0], [1.65995844E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65995868E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 28466.80392156862, "minX": 1.65995826E12, "maxY": 111034.0, "series": [{"data": [[1.6599585E12, 98987.0], [1.65995868E12, 111034.0], [1.65995856E12, 100945.06578947371], [1.65995862E12, 110656.98630136983]], "isOverall": false, "label": "Checkout Page", "isController": false}, {"data": [[1.6599585E12, 96606.66111111108], [1.65995856E12, 97668.17647058824], [1.65995844E12, 98051.81553398063]], "isOverall": false, "label": "Cart Page", "isController": false}, {"data": [[1.65995832E12, 79234.79411764706], [1.65995838E12, 82935.87894736847], [1.65995844E12, 90053.07894736844]], "isOverall": false, "label": "Tablet Page", "isController": false}, {"data": [[1.65995832E12, 67672.45959595958], [1.65995826E12, 28466.80392156862]], "isOverall": false, "label": "Home Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65995868E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.65995826E12, "maxY": 4.9E-324, "series": [{"data": [[1.6599585E12, 0.0], [1.65995868E12, 0.0], [1.65995856E12, 0.0], [1.65995862E12, 0.0]], "isOverall": false, "label": "Checkout Page", "isController": false}, {"data": [[1.6599585E12, 0.0], [1.65995856E12, 0.0], [1.65995844E12, 0.0]], "isOverall": false, "label": "Cart Page", "isController": false}, {"data": [[1.65995832E12, 0.0], [1.65995838E12, 0.0], [1.65995844E12, 0.0]], "isOverall": false, "label": "Tablet Page", "isController": false}, {"data": [[1.65995832E12, 0.0], [1.65995826E12, 0.0]], "isOverall": false, "label": "Home Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65995868E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 28466.774509803916, "minX": 1.65995826E12, "maxY": 111034.0, "series": [{"data": [[1.6599585E12, 98987.0], [1.65995868E12, 111034.0], [1.65995856E12, 100945.01315789467], [1.65995862E12, 110656.90410958904]], "isOverall": false, "label": "Checkout Page", "isController": false}, {"data": [[1.6599585E12, 96606.59444444445], [1.65995856E12, 97668.11764705884], [1.65995844E12, 98051.73786407766]], "isOverall": false, "label": "Cart Page", "isController": false}, {"data": [[1.65995832E12, 79234.73529411765], [1.65995838E12, 82935.80526315788], [1.65995844E12, 90052.97368421053]], "isOverall": false, "label": "Tablet Page", "isController": false}, {"data": [[1.65995832E12, 67672.2272727273], [1.65995826E12, 28466.774509803916]], "isOverall": false, "label": "Home Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65995868E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.7976931348623157E308, "minX": 1.7976931348623157E308, "maxY": 4.9E-324, "series": [{"data": [], "isOverall": false, "label": "Max", "isController": false}, {"data": [], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [], "isOverall": false, "label": "Min", "isController": false}, {"data": [], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 4.9E-324, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 37474.5, "minX": 1.0, "maxY": 102585.0, "series": [{"data": [[4.0, 86315.5], [2.0, 96489.0], [1.0, 102585.0], [9.0, 94293.0], [5.0, 94981.5], [10.0, 91226.5], [3.0, 95739.0], [6.0, 37474.5], [14.0, 96160.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 14.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[4.0, 0.0], [2.0, 0.0], [1.0, 0.0], [9.0, 0.0], [5.0, 0.0], [10.0, 0.0], [3.0, 0.0], [6.0, 0.0], [14.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 14.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.2833333333333333, "minX": 1.65995826E12, "maxY": 6.7, "series": [{"data": [[1.6599585E12, 3.0], [1.65995832E12, 3.8666666666666667], [1.65995838E12, 3.1666666666666665], [1.65995826E12, 6.7], [1.65995856E12, 0.2833333333333333], [1.65995844E12, 2.9833333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65995856E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.65995826E12, "maxY": 3.7, "series": [{"data": [[1.65995832E12, 0.16666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.6599585E12, 3.0166666666666666], [1.65995832E12, 3.7], [1.65995838E12, 3.1666666666666665], [1.65995868E12, 0.016666666666666666], [1.65995826E12, 1.7], [1.65995856E12, 2.816666666666667], [1.65995862E12, 2.433333333333333], [1.65995844E12, 2.9833333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65995868E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.65995826E12, "maxY": 3.3, "series": [{"data": [[1.65995832E12, 3.3], [1.65995826E12, 1.7]], "isOverall": false, "label": "Home Page-failure", "isController": false}, {"data": [[1.6599585E12, 3.0], [1.65995856E12, 0.2833333333333333], [1.65995844E12, 1.7166666666666666]], "isOverall": false, "label": "Cart Page-failure", "isController": false}, {"data": [[1.65995832E12, 0.5666666666666667], [1.65995838E12, 3.1666666666666665], [1.65995844E12, 1.2666666666666666]], "isOverall": false, "label": "Tablet Page-failure", "isController": false}, {"data": [[1.6599585E12, 0.016666666666666666], [1.65995868E12, 0.016666666666666666], [1.65995856E12, 2.533333333333333], [1.65995862E12, 2.433333333333333]], "isOverall": false, "label": "Checkout Page-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65995868E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.65995826E12, "maxY": 3.8666666666666667, "series": [{"data": [], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6599585E12, 3.0166666666666666], [1.65995832E12, 3.8666666666666667], [1.65995838E12, 3.1666666666666665], [1.65995868E12, 0.016666666666666666], [1.65995826E12, 1.7], [1.65995856E12, 2.816666666666667], [1.65995862E12, 2.433333333333333], [1.65995844E12, 2.9833333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65995868E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

